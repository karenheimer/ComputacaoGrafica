var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.817,1,0.931]],["body/components/AppComponent.html",[0,1.418,1,1.696,2,2.19,3,0.482,4,0.482,5,2.003,6,2.003,7,2.003,8,0.395,9,2.768,10,2.003,11,3.039,12,2.977,13,4.314,14,2.518,15,4.314,16,2.518,17,4.314,18,0.482,19,0.848,20,4.718,21,0.482,22,0.051,23,2.33,24,1.176,25,1.176,26,4.314,27,0.575,28,3.432,29,0.575,30,1.525,31,0.482,32,0.174,33,1.525,34,2.518,35,2.518,36,2.003,37,2.889,38,2.003,39,0.722,40,2.003,41,1.176,42,2.003,43,2.003,44,1.176,45,2.003,46,2.003,47,1.176,48,2.003,49,2.003,50,2.003,51,0.039,52,0.039]],["title/modules/AppModule.html",[53,1.844,54,1.586]],["body/modules/AppModule.html",[1,1.87,3,0.46,4,0.46,8,0.377,22,0.051,29,0.861,30,1.457,31,0.46,32,0.166,33,1.457,41,1.763,44,1.763,47,1.763,51,0.038,52,0.038,53,2.227,54,3.199,55,2.227,56,1.914,57,3.726,58,3.726,59,2.645,60,2.645,61,2.645,62,2.645,63,2.645,64,3.38,65,2.645,66,2.645,67,3.28,68,3.28,69,2.227,70,3.28,71,3.28,72,4.192,73,2.645,74,2.227,75,4.192,76,3.28,77,3.28,78,2.227,79,3.28,80,3.28]],["title/components/CanvasBoxComponent.html",[0,0.817,41,0.931]],["body/components/CanvasBoxComponent.html",[0,1.05,1,0.667,2,1.479,3,0.273,4,0.273,5,1.135,6,1.135,7,1.135,8,0.224,10,1.135,11,2.547,12,2.426,14,1.701,16,1.701,18,0.273,19,0.573,21,0.583,22,0.052,24,1.707,25,1.707,27,0.851,29,0.811,30,0.864,31,0.273,32,0.098,33,0.864,34,1.701,35,1.701,36,1.135,37,2.265,38,1.135,39,0.585,40,1.135,41,1.33,42,2.64,43,1.135,44,0.667,45,1.135,46,1.135,47,1.33,48,2.265,49,1.135,50,1.135,51,0.027,52,0.027,69,3.481,81,4.135,82,1.569,83,2.35,84,2.818,85,2.914,86,2.914,87,2.914,88,3.494,89,3.494,90,3.494,91,3.494,92,1.97,93,3.494,94,1.774,95,1.774,96,2.818,97,2.818,98,3.494,99,4.156,100,0.665,101,3.129,102,2.914,103,1.945,104,0.573,105,1.479,106,1.945,107,1.514,108,2.426,109,2.914,110,1.092,111,1.945,112,0.444,113,0.444,114,0.999,115,2.635,116,1.17,117,1.945,118,2.914,119,3.129,120,2.067,121,1.945,122,2.914,123,1.945,124,1.945,125,1.514,126,2.914,127,3.494,128,1.945,129,2.35,130,1.945,131,1.553,132,1.945,133,2.914,134,1.945,135,2.914,136,1.945,137,1.945,138,2.35,139,1.945,140,3.494,141,1.945,142,0.382,143,1.945,144,0.864,145,0.988,146,1.569,147,1.945,148,1.945,149,0.864,150,1.945,151,1.135,152,1.945,153,1.135,154,1.945,155,0.511,156,1.945,157,0.759,158,1.945,159,1.945,160,1.945,161,2.914,162,1.945,163,2.914,164,1.945,165,1.945,166,1.945,167,1.945,168,1.945,169,1.945,170,3.494]],["title/classes/Esfera.html",[32,0.137,149,1.207]],["body/classes/Esfera.html",[3,0.258,4,0.258,8,0.212,18,0.258,19,0.549,21,0.599,22,0.052,24,0.63,25,0.63,27,0.743,29,0.679,31,0.258,32,0.093,39,0.565,51,0.026,52,0.026,94,1.715,95,1.715,100,0.637,104,0.549,107,2.01,110,1.383,112,0.771,113,0.771,114,1.637,116,0.771,120,1.241,125,0.84,131,1.501,142,0.362,144,0.817,145,0.934,149,2.032,155,1.369,157,0.717,171,0.483,172,1.483,173,1.63,174,2.059,175,3.377,176,2.724,177,3.377,178,2.793,179,1.501,180,0.717,181,2.793,182,4.573,183,1.804,184,2.793,185,2.793,186,1.839,187,1.839,188,1.839,189,2.793,190,4.056,191,1.839,192,1.418,193,0.957,194,2.253,195,1.374,196,2.793,197,2.236,198,2.793,199,3.772,200,0.84,201,3.377,202,2.793,203,1.898,204,1.863,205,2.202,206,2.793,207,1.501,208,1.896,209,2.899,210,2.561,211,1.073,212,1.839,213,2.253,214,2.253,215,1.63,216,1.241,217,2.253,218,2.253,219,2.253,220,2.253,221,3.042,222,3.042,223,3.042,224,3.042,225,2.253,226,1.896,227,1.896,228,2.253,229,2.253,230,1.483,231,1.073,232,1.073,233,3.772,234,4.056,235,2.724,236,2.122,237,1.249,238,2.793,239,1.839,240,1.483,241,2.793,242,3.377,243,2.793,244,1.839,245,2.793,246,1.839,247,1.839,248,2.793,249,2.253,250,2.793,251,1.134,252,2.793,253,1.249,254,2.793,255,1.483,256,1.839,257,1.839,258,1.483,259,1.839,260,1.839,261,1.839,262,1.073]],["title/classes/HitRecord.html",[32,0.137,155,0.714]],["body/classes/HitRecord.html",[3,0.346,4,0.346,8,0.284,18,0.346,19,0.681,21,0.609,22,0.052,24,0.845,25,0.845,27,0.886,29,0.67,31,0.346,32,0.125,39,0.726,51,0.032,52,0.032,95,2.031,104,0.853,105,2.202,110,0.909,112,0.99,113,0.99,114,1.566,115,2.351,116,1.042,125,1.202,131,1.778,142,0.485,144,1.096,145,1.252,155,0.909,171,0.648,176,3.226,180,1.561,183,1.73,193,1.187,197,1.538,200,0.741,216,1.538,230,1.989,231,1.44,235,3.226,251,1.304,263,4.294,264,1.989,265,3.462,266,2.351,267,1.538,268,3.462,269,2.792,270,2.792,271,2.792,272,2.792,273,2.792,274,1.538,275,4,276,4,277,4,278,2.351,279,4.569,280,4.569,281,3.102,282,3.462,283,2.466,284,2.466,285,2.466,286,2.466,287,2.466,288,2.466,289,2.466,290,2.466,291,2.466,292,2.466,293,2.466,294,2.466,295,2.466,296,2.466,297,2.466,298,2.466,299,2.466,300,2.466,301,2.466,302,2.466,303,4,304,4,305,4,306,4.338,307,2.466,308,2.466,309,2.466,310,2.466]],["title/classes/Hittable.html",[32,0.137,174,1.379]],["body/classes/Hittable.html",[3,0.479,4,0.479,8,0.393,18,0.479,21,0.479,22,0.051,27,0.572,29,0.72,31,0.479,32,0.173,39,0.572,51,0.039,52,0.039,100,0.981,104,0.672,107,1.987,110,1.366,112,0.779,113,0.779,142,0.672,155,1.386,157,1.333,171,0.897,174,2.184,179,2.092,193,1.474,197,1.911,200,1.027,207,1.911,208,2.92,209,3.196,210,3.196,216,1.911,251,1.027,262,1.994,266,2.92,267,1.911,269,3.469,270,3.469,271,3.469,272,3.469,273,3.469,274,1.911,311,2.755,312,2.92,313,3.469,314,3.416]],["title/classes/HittableList.html",[32,0.137,108,1.586]],["body/classes/HittableList.html",[3,0.354,4,0.354,8,0.29,18,0.354,19,0.691,21,0.568,22,0.051,27,0.733,29,0.678,31,0.354,32,0.128,39,0.589,51,0.032,52,0.032,100,0.802,104,0.496,107,1.91,108,2.052,110,1.311,112,0.802,113,0.802,116,0.575,142,0.496,155,1.332,157,0.984,171,0.662,173,2.052,174,2.608,179,1.799,180,1.372,193,1.205,195,1.434,197,2.219,200,1.057,204,2.004,205,2.052,207,1.562,208,2.387,209,2.973,210,3.127,211,1.472,213,2.835,214,2.835,215,2.052,216,1.562,217,2.835,218,2.835,219,2.835,220,2.835,221,3.532,222,3.532,223,3.532,224,3.532,225,2.835,226,2.387,227,2.387,228,2.835,229,2.835,232,1.472,236,1.946,237,1.712,251,0.758,253,1.712,278,2.387,312,2.387,315,3.532,316,2.033,317,3.515,318,2.556,319,4.379,320,4.379,321,4.048,322,4.048,323,3.515,324,3.515,325,2.052,326,3.515,327,2.521,328,2.521,329,2.521,330,2.521,331,2.521,332,2.521,333,2.521,334,2.521]],["title/classes/Imagem.html",[32,0.137,92,1.379]],["body/classes/Imagem.html",[3,0.33,4,0.33,8,0.27,18,0.33,19,0.658,21,0.654,22,0.052,27,0.847,29,0.393,31,0.33,32,0.119,39,0.56,51,0.031,52,0.031,92,2.667,94,2.626,96,3.617,97,3.869,100,0.763,104,0.834,105,1.193,110,1.403,112,0.763,113,0.763,114,1.772,116,0.536,142,0.462,171,0.617,180,1.305,192,1.698,193,1.455,194,2.697,195,1.276,200,0.706,203,2.179,204,1.305,216,1.486,226,2.271,227,2.271,236,1.044,251,1.276,267,1.486,278,2.271,318,2.478,325,2.478,335,1.894,336,3.895,337,3.895,338,3.895,339,3.895,340,3.345,341,3.895,342,3.895,343,3.345,344,3.345,345,2.349,346,2.349,347,2.349,348,3.345,349,2.349,350,3.423,351,3.423,352,3.345,353,1.952,354,3.345,355,3.345,356,2.271,357,2.349,358,2.349,359,2.697,360,2.349,361,2.349,362,2.349,363,2.349,364,4.244,365,4.244,366,2.697,367,2.349,368,2.349,369,2.697,370,4.244,371,3.345,372,3.895,373,3.345,374,2.349,375,2.349,376,2.349,377,2.349]],["title/components/LerObjComponent.html",[0,0.817,44,0.931]],["body/components/LerObjComponent.html",[0,1.018,1,0.633,2,1.423,3,0.259,4,0.259,5,1.079,6,1.079,7,1.079,8,0.213,10,1.079,11,2.498,12,1.977,14,1.637,16,1.637,18,0.259,19,0.551,21,0.393,22,0.052,23,1.904,24,1.607,25,1.607,27,0.825,29,0.681,30,1.246,31,0.259,32,0.094,33,0.821,34,1.637,35,1.637,36,1.079,37,2.207,38,1.079,39,0.469,40,1.079,41,0.633,42,1.079,43,1.079,44,1.296,45,2.595,46,1.079,47,0.633,48,1.079,49,1.079,50,1.079,51,0.026,52,0.026,78,3.384,83,2.261,84,2.732,100,0.64,101,3.049,104,0.666,105,2.381,116,0.64,125,1.539,142,0.363,183,1.161,195,1.137,203,1.246,204,1.669,215,1.637,274,1.246,353,1.637,378,4.02,379,1.49,380,3.781,381,2.804,382,2.804,383,3.388,384,3.388,385,3.388,386,4.279,387,3.388,388,4.279,389,4.279,390,3.781,391,3.781,392,2.261,393,3.388,394,3.388,395,1.848,396,1.848,397,1.848,398,2.804,399,3.049,400,2.498,401,2.804,402,1.848,403,2.804,404,2.804,405,2.804,406,2.804,407,3.781,408,2.804,409,2.804,410,3.781,411,1.848,412,2.804,413,2.804,414,2.804,415,2.804,416,3.781,417,1.848,418,2.804,419,2.804,420,1.848,421,2.804,422,1.848,423,1.848,424,3.388,425,1.848,426,1.848,427,1.848,428,2.732,429,3.388,430,1.848,431,1.848,432,1.848,433,1.848,434,1.848,435,1.848,436,1.848,437,1.848,438,1.848,439,2.804,440,1.848,441,1.848,442,1.49,443,1.848,444,1.848,445,1.848,446,1.848,447,1.848,448,2.261,449,1.848,450,1.848,451,1.848,452,1.848,453,1.49,454,1.848,455,1.848,456,1.848,457,1.848,458,1.848,459,1.848,460,1.848,461,1.848,462,1.848,463,1.848,464,2.804,465,1.848,466,3.388,467,1.848,468,1.848,469,1.848,470,1.848,471,2.804,472,1.848,473,1.848,474,1.848,475,1.848,476,1.848,477,1.848,478,1.848,479,1.848,480,1.848,481,1.848,482,1.848,483,1.848]],["title/classes/Material.html",[32,0.137,183,0.931]],["body/classes/Material.html",[3,0.483,4,0.483,8,0.396,18,0.483,21,0.483,22,0.051,27,0.576,29,0.723,31,0.483,32,0.174,39,0.576,51,0.039,52,0.039,100,0.986,104,0.676,107,2.086,112,0.785,113,0.785,114,1.698,142,0.676,155,1.388,157,1.342,171,0.903,179,1.529,183,1.698,195,1.489,200,1.034,207,1.92,215,2.522,251,1.034,262,2.008,266,2.933,267,1.92,312,2.933,313,3.484,484,2.774,485,4.32,486,4.32,487,2.933,488,2.933,489,3.207,490,3.207,491,3.44]],["title/classes/Matrix2.html",[32,0.137,492,1.844]],["body/classes/Matrix2.html",[3,0.261,4,0.261,8,0.214,18,0.261,19,0.553,21,0.659,22,0.052,27,0.802,31,0.261,32,0.094,39,0.768,51,0.026,52,0.026,100,0.642,104,0.902,110,1.378,112,1.047,113,1.047,116,0.642,120,1.251,125,1.462,129,3.457,171,0.488,180,0.725,251,1.379,492,3.798,493,1.498,494,3.791,495,2.814,496,2.814,497,2.814,498,2.814,499,2.814,500,2.814,501,2.814,502,2.814,503,3.791,504,3.791,505,3.791,506,2.814,507,2.814,508,3.791,509,1.857,510,2.814,511,1.857,512,4.287,513,2.814,514,5.041,515,1.857,516,2.814,517,4.697,518,1.857,519,2.814,520,1.857,521,4.453,522,2.814,523,1.857,524,2.814,525,1.857,526,2.814,527,1.857,528,2.814,529,1.857,530,1.857,531,2.814,532,2.814,533,2.814,534,2.814,535,4.587,536,3.791,537,4.074,538,3.398,539,3.791,540,4.074,541,3.398,542,3.791,543,4.074,544,3.398,545,3.791,546,4.074,547,3.398,548,3.791,549,3.791,550,3.791,551,3.791,552,1.857,553,1.857,554,1.857,555,1.857,556,1.857,557,1.857]],["title/classes/Metal.html",[32,0.137,151,1.586]],["body/classes/Metal.html",[3,0.306,4,0.306,8,0.251,18,0.306,19,0.624,21,0.612,22,0.051,24,0.748,25,0.748,27,0.786,29,0.687,31,0.306,32,0.11,39,0.626,51,0.029,52,0.029,94,1.898,95,1.898,100,0.724,104,0.735,107,1.774,110,1.195,112,0.853,113,0.853,114,1.844,116,0.498,119,1.76,120,1.661,125,0.954,131,1.661,142,0.429,144,0.97,145,1.108,149,1.41,151,2.395,155,1.145,157,0.852,171,0.573,173,1.852,179,0.97,180,1.238,183,1.608,192,2.213,193,1.648,195,1.233,197,1.937,200,1.124,203,1.661,204,1.701,205,2.544,207,0.97,211,1.274,231,1.274,232,1.274,236,1.823,251,0.954,274,1.661,281,2.154,318,1.852,325,1.852,400,2.182,487,2.154,488,1.482,489,2.154,490,2.154,558,1.76,559,3.738,560,3.738,561,4.103,562,2.559,563,3.173,564,4.359,565,3.173,566,3.738,567,3.014,568,3.014,569,3.014,570,3.668,571,3.014,572,3.014,573,3.014,574,3.014,575,2.183,576,2.183,577,2.183,578,3.309,579,3.309,580,3.173,581,3.173,582,2.559,583,3.515,584,2.183,585,2.559,586,2.559,587,2.183,588,1.76,589,1.76,590,1.76,591,1.76,592,1.76,593,1.76,594,2.183,595,2.183,596,2.183,597,2.559,598,2.183,599,2.183,600,2.183,601,3.738,602,1.76,603,2.183,604,3.173,605,2.183,606,2.183,607,3.173]],["title/components/SalvarComponent.html",[0,0.817,47,0.931]],["body/components/SalvarComponent.html",[0,1.109,1,0.731,2,1.584,3,0.299,4,0.299,5,1.245,6,1.245,7,1.245,8,0.245,10,1.245,11,2.633,12,2.521,14,1.821,16,1.821,18,0.299,21,0.438,22,0.052,23,1.448,24,0.731,25,0.731,27,0.618,29,0.679,30,0.948,31,0.299,32,0.108,33,0.948,34,1.821,35,1.821,36,1.245,37,2.369,38,1.245,39,0.618,40,1.245,41,0.731,42,2.891,43,1.245,44,0.731,45,1.245,46,1.245,47,1.391,48,2.521,49,1.245,50,1.245,51,0.028,52,0.028,92,2.644,100,0.712,104,0.613,105,2.06,110,0.819,112,0.487,113,0.487,114,1.264,116,0.712,125,0.938,142,0.419,146,1.72,149,0.948,192,2.06,193,1.637,195,0.938,200,0.641,203,1.386,204,1.76,216,1.386,236,0.948,274,1.803,318,1.821,350,2.516,351,3.273,353,1.821,356,2.118,359,2.516,366,2.516,369,2.516,392,2.516,399,2.516,400,2.369,428,2.516,448,3.273,608,1.72,609,3.12,610,3.12,611,3.12,612,4.058,613,3.688,614,2.133,615,4.058,616,3.12,617,3.12,618,3.12,619,2.133,620,3.12,621,3.12,622,3.12,623,3.12,624,3.12,625,3.12,626,3.12,627,2.133,628,3.12,629,3.12,630,3.12,631,3.12,632,3.688,633,1.72,634,2.133,635,2.133,636,3.12,637,2.133,638,2.133,639,2.133,640,2.133,641,2.133,642,2.133,643,2.133,644,2.133,645,2.133,646,2.133,647,2.133,648,2.133,649,2.133,650,2.133,651,2.133,652,3.688,653,2.133,654,2.133,655,2.133,656,2.133,657,2.133,658,2.133,659,4.058,660,2.133,661,2.133,662,2.133,663,2.133,664,2.133,665,2.133,666,2.133,667,2.133,668,2.133,669,2.133,670,2.133,671,2.133,672,2.133]],["title/classes/Vidro.html",[32,0.137,153,1.586]],["body/classes/Vidro.html",[3,0.247,4,0.247,8,0.202,18,0.247,19,0.531,21,0.589,22,0.052,24,0.603,25,0.603,27,0.731,29,0.617,31,0.247,32,0.089,39,0.666,51,0.025,52,0.025,94,1.668,95,1.668,100,0.616,104,0.724,107,1.873,110,1.296,112,0.907,113,0.907,114,1.725,115,1.194,116,0.841,120,2.097,125,0.811,131,1.46,142,0.346,144,0.781,145,0.893,153,2.449,155,1.214,157,0.686,171,0.462,173,1.575,179,0.781,180,1.053,183,1.497,192,2.13,193,1.545,195,1.108,197,2.097,200,1.195,203,1.865,204,1.759,205,2.632,207,1.199,211,1.026,231,1.026,232,1.026,236,1.865,237,1.194,240,2.649,249,1.418,251,0.987,253,1.194,255,1.418,258,3.206,262,1.026,267,1.199,274,1.199,281,2.502,325,1.575,400,2.151,487,1.833,488,1.833,489,2.502,490,2.502,562,2.177,567,2.177,568,2.972,569,2.177,570,3.636,571,2.177,572,2.177,573,2.972,574,2.972,578,2.972,579,2.649,582,1.418,583,2.972,585,1.418,586,2.177,588,2.177,589,2.177,590,2.177,591,2.177,592,2.177,593,2.177,597,1.418,602,1.418,673,1.418,674,3.285,675,2.699,676,2.699,677,2.699,678,2.699,679,3.285,680,2.699,681,2.699,682,1.758,683,1.758,684,1.758,685,4.369,686,3.685,687,1.758,688,2.699,689,1.758,690,2.699,691,1.758,692,2.699,693,2.699,694,4.509,695,2.699,696,2.699,697,4.196,698,3.685,699,3.285,700,2.699,701,1.758,702,1.758,703,1.758,704,1.758,705,1.758,706,2.699,707,1.758,708,1.758,709,1.758,710,1.758,711,1.758,712,1.758,713,1.758,714,1.758,715,2.699,716,1.758,717,1.758,718,1.758,719,1.758,720,1.758,721,1.758,722,4.196,723,1.758,724,1.758]],["title/coverage.html",[725,2.985]],["body/coverage.html",[0,1.479,1,1.157,8,0.389,9,2.723,21,0.474,22,0.051,32,0.274,41,1.157,44,1.157,47,1.157,51,0.039,52,0.039,69,2.293,78,2.293,81,2.723,82,2.723,92,1.714,108,1.971,116,1.069,125,1.015,131,1.501,138,3.777,144,1.501,149,1.501,151,1.971,153,1.971,155,0.887,172,2.723,174,1.714,183,1.157,263,2.723,264,2.723,311,2.723,315,2.723,316,2.723,335,2.723,378,2.723,379,2.723,442,2.723,484,2.723,492,2.293,493,2.723,558,2.723,608,2.723,673,2.723,725,2.723,726,3.377,727,3.377,728,3.377,729,3.377,730,4.27,731,3.377,732,3.377,733,3.377,734,3.377,735,3.377,736,3.377,737,4.27,738,4.27,739,3.377,740,3.377,741,3.377,742,3.377,743,3.377,744,3.377,745,3.377,746,3.377,747,3.377,748,3.377,749,3.377,750,3.377]],["title/dependencies.html",[56,1.906,751,1.832]],["body/dependencies.html",[22,0.052,30,1.689,51,0.042,52,0.042,56,2.219,73,3.705,74,3.119,142,0.747,633,3.066,752,3.802,753,5.447,754,3.802,755,3.802,756,3.802,757,3.802,758,3.802,759,3.802,760,3.802,761,3.802,762,3.802,763,3.802,764,3.802,765,3.802,766,3.802,767,3.802,768,3.802,769,3.802,770,3.802,771,3.802,772,3.802]],["title/index.html",[18,0.319,773,2.272,774,2.272]],["body/index.html",[22,0.043,51,0.043,52,0.043,195,1.416,267,2.094,353,2.314,356,2.692,775,3.964,776,3.964,777,3.964,778,3.964,779,3.964,780,3.964,781,3.964,782,3.964,783,3.964,784,3.964,785,3.964,786,4.712,787,4.712,788,4.712,789,3.964,790,3.964,791,3.964,792,4.712,793,3.964,794,4.712,795,3.964,796,3.964,797,3.964,798,3.964,799,3.964]],["title/modules.html",[55,2.513]],["body/modules.html",[22,0.045,51,0.045,52,0.045,54,2.516,55,2.926,74,2.926,800,4.31,801,4.31,802,4.31]],["title/overview.html",[803,2.985]],["body/overview.html",[1,1.849,2,1.925,22,0.049,33,1.685,41,1.69,44,1.69,47,1.69,51,0.042,52,0.042,53,3.115,54,3.233,56,2.213,57,3.058,58,3.058,59,3.058,60,3.058,61,3.058,62,3.058,63,3.058,64,3.7,65,3.058,66,3.058,120,1.685,171,0.996,453,3.058,803,3.058,804,3.792]],["title/properties.html",[19,0.642,751,1.832]],["body/properties.html",[19,0.852,22,0.048,51,0.045,52,0.045,805,4.335,806,4.335]]],"invertedIndex":[["",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CanvasBoxComponent.html":{},"classes/Esfera.html":{},"classes/HitRecord.html":{},"classes/Hittable.html":{},"classes/HittableList.html":{},"classes/Imagem.html":{},"components/LerObjComponent.html":{},"classes/Material.html":{},"classes/Matrix2.html":{},"classes/Metal.html":{},"components/SalvarComponent.html":{},"classes/Vidro.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["0",{"_index":116,"title":{},"body":{"components/CanvasBoxComponent.html":{},"classes/Esfera.html":{},"classes/HitRecord.html":{},"classes/HittableList.html":{},"classes/Imagem.html":{},"components/LerObjComponent.html":{},"classes/Matrix2.html":{},"classes/Metal.html":{},"components/SalvarComponent.html":{},"classes/Vidro.html":{},"coverage.html":{}}}],["0.0.0",{"_index":806,"title":{},"body":{"properties.html":{}}}],["0.08",{"_index":471,"title":{},"body":{"components/LerObjComponent.html":{}}}],["0.1",{"_index":415,"title":{},"body":{"components/LerObjComponent.html":{}}}],["0.10.3",{"_index":770,"title":{},"body":{"dependencies.html":{}}}],["0.11.10",{"_index":763,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":761,"title":{},"body":{"dependencies.html":{}}}],["0.14.3",{"_index":772,"title":{},"body":{"dependencies.html":{}}}],["0.161.0",{"_index":766,"title":{},"body":{"dependencies.html":{}}}],["0.161.2",{"_index":760,"title":{},"body":{"dependencies.html":{}}}],["0.2",{"_index":166,"title":{},"body":{"components/CanvasBoxComponent.html":{}}}],["0.4",{"_index":450,"title":{},"body":{"components/LerObjComponent.html":{}}}],["0.5",{"_index":163,"title":{},"body":{"components/CanvasBoxComponent.html":{}}}],["0.6",{"_index":165,"title":{},"body":{"components/CanvasBoxComponent.html":{}}}],["0/11",{"_index":745,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":746,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":729,"title":{},"body":{"coverage.html":{}}}],["04",{"_index":776,"title":{},"body":{"index.html":{}}}],["0xffffff",{"_index":449,"title":{},"body":{"components/LerObjComponent.html":{}}}],["1",{"_index":120,"title":{},"body":{"components/CanvasBoxComponent.html":{},"classes/Esfera.html":{},"classes/Matrix2.html":{},"classes/Metal.html":{},"classes/Vidro.html":{},"overview.html":{}}}],["1/2",{"_index":730,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":736,"title":{},"body":{"coverage.html":{}}}],["1/radius",{"_index":260,"title":{},"body":{"classes/Esfera.html":{}}}],["10",{"_index":453,"title":{},"body":{"components/LerObjComponent.html":{},"overview.html":{}}}],["100",{"_index":478,"title":{},"body":{"components/LerObjComponent.html":{}}}],["1000",{"_index":416,"title":{},"body":{"components/LerObjComponent.html":{}}}],["14",{"_index":735,"title":{},"body":{"coverage.html":{}}}],["15",{"_index":439,"title":{},"body":{"components/LerObjComponent.html":{}}}],["17.1.2",{"_index":784,"title":{},"body":{"index.html":{}}}],["17.1.3",{"_index":753,"title":{},"body":{"dependencies.html":{}}}],["190",{"_index":469,"title":{},"body":{"components/LerObjComponent.html":{}}}],["2",{"_index":119,"title":{},"body":{"components/CanvasBoxComponent.html":{},"classes/Metal.html":{}}}],["2.3.0",{"_index":768,"title":{},"body":{"dependencies.html":{}}}],["2/7",{"_index":740,"title":{},"body":{"coverage.html":{}}}],["2/8",{"_index":734,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":443,"title":{},"body":{"components/LerObjComponent.html":{}}}],["200",{"_index":135,"title":{},"body":{"components/CanvasBoxComponent.html":{}}}],["23",{"_index":747,"title":{},"body":{"coverage.html":{}}}],["25",{"_index":442,"title":{},"body":{"components/LerObjComponent.html":{},"coverage.html":{}}}],["255",{"_index":659,"title":{},"body":{"components/SalvarComponent.html":{}}}],["28",{"_index":739,"title":{},"body":{"coverage.html":{}}}],["3/13",{"_index":748,"title":{},"body":{"coverage.html":{}}}],["3/4",{"_index":738,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":804,"title":{},"body":{"overview.html":{}}}],["4/8",{"_index":731,"title":{},"body":{"coverage.html":{}}}],["400",{"_index":133,"title":{},"body":{"components/CanvasBoxComponent.html":{}}}],["42/43",{"_index":744,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":724,"title":{},"body":{"classes/Vidro.html":{}}}],["5/8",{"_index":733,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":138,"title":{},"body":{"components/CanvasBoxComponent.html":{},"coverage.html":{}}}],["62",{"_index":732,"title":{},"body":{"coverage.html":{}}}],["7.5",{"_index":438,"title":{},"body":{"components/LerObjComponent.html":{}}}],["7.8.0",{"_index":765,"title":{},"body":{"dependencies.html":{}}}],["75",{"_index":737,"title":{},"body":{"coverage.html":{}}}],["97",{"_index":743,"title":{},"body":{"coverage.html":{}}}],["_albedo",{"_index":559,"title":{},"body":{"classes/Metal.html":{}}}],["_center",{"_index":175,"title":{},"body":{"classes/Esfera.html":{}}}],["_fuzz",{"_index":560,"title":{},"body":{"classes/Metal.html":{}}}],["_imagem",{"_index":653,"title":{},"body":{"components/SalvarComponent.html":{}}}],["_imagem.getbase64async(jimp.mime_png).then((base",{"_index":664,"title":{},"body":{"components/SalvarComponent.html":{}}}],["_imagem.setpixelcolor(color",{"_index":663,"title":{},"body":{"components/SalvarComponent.html":{}}}],["_indicerefrativo",{"_index":674,"title":{},"body":{"classes/Vidro.html":{}}}],["_list",{"_index":321,"title":{},"body":{"classes/HittableList.html":{}}}],["_material",{"_index":176,"title":{},"body":{"classes/Esfera.html":{},"classes/HitRecord.html":{}}}],["_normal",{"_index":275,"title":{},"body":{"classes/HitRecord.html":{}}}],["_p",{"_index":276,"title":{},"body":{"classes/HitRecord.html":{}}}],["_pixelmatriz",{"_index":336,"title":{},"body":{"classes/Imagem.html":{}}}],["_radius",{"_index":177,"title":{},"body":{"classes/Esfera.html":{}}}],["_resolucao",{"_index":337,"title":{},"body":{"classes/Imagem.html":{}}}],["_resolucaox",{"_index":338,"title":{},"body":{"classes/Imagem.html":{}}}],["_resolucaoy",{"_index":339,"title":{},"body":{"classes/Imagem.html":{}}}],["_t",{"_index":277,"title":{},"body":{"classes/HitRecord.html":{}}}],["a*c",{"_index":247,"title":{},"body":{"classes/Esfera.html":{}}}],["a.click",{"_index":647,"title":{},"body":{"components/SalvarComponent.html":{}}}],["a.download",{"_index":645,"title":{},"body":{"components/SalvarComponent.html":{}}}],["a.href",{"_index":641,"title":{},"body":{"components/SalvarComponent.html":{}}}],["abra",{"_index":791,"title":{},"body":{"index.html":{}}}],["absorvido",{"_index":590,"title":{},"body":{"classes/Metal.html":{},"classes/Vidro.html":{}}}],["accessors",{"_index":278,"title":{},"body":{"classes/HitRecord.html":{},"classes/HittableList.html":{},"classes/Imagem.html":{}}}],["actual_component",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"components/CanvasBoxComponent.html":{},"components/LerObjComponent.html":{},"components/SalvarComponent.html":{}}}],["adiciona",{"_index":194,"title":{},"body":{"classes/Esfera.html":{},"classes/Imagem.html":{}}}],["adicionado",{"_index":355,"title":{},"body":{"classes/Imagem.html":{}}}],["adicionarpixel",{"_index":340,"title":{},"body":{"classes/Imagem.html":{}}}],["adicionarpixel(pixelrgb",{"_index":348,"title":{},"body":{"classes/Imagem.html":{}}}],["albedo",{"_index":566,"title":{},"body":{"classes/Metal.html":{}}}],["aleatório",{"_index":580,"title":{},"body":{"classes/Metal.html":{}}}],["ambientlight",{"_index":429,"title":{},"body":{"components/LerObjComponent.html":{}}}],["angular",{"_index":781,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":752,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":754,"title":{},"body":{"dependencies.html":{}}}],["angular/compiler",{"_index":755,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CanvasBoxComponent.html":{},"components/LerObjComponent.html":{},"components/SalvarComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":756,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":758,"title":{},"body":{"dependencies.html":{}}}],["angulo",{"_index":695,"title":{},"body":{"classes/Vidro.html":{}}}],["ao",{"_index":198,"title":{},"body":{"classes/Esfera.html":{}}}],["app",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/CanvasBoxComponent.html":{},"components/LerObjComponent.html":{},"components/SalvarComponent.html":{}}}],["app.component",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":17,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":15,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CanvasBoxComponent.html":{},"components/LerObjComponent.html":{},"components/SalvarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appmodule",{"_index":54,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["aproximação",{"_index":692,"title":{},"body":{"classes/Vidro.html":{}}}],["armazena",{"_index":317,"title":{},"body":{"classes/HittableList.html":{}}}],["armazenamento",{"_index":226,"title":{},"body":{"classes/Esfera.html":{},"classes/HittableList.html":{},"classes/Imagem.html":{}}}],["arquivo",{"_index":399,"title":{},"body":{"components/LerObjComponent.html":{},"components/SalvarComponent.html":{}}}],["array",{"_index":129,"title":{},"body":{"components/CanvasBoxComponent.html":{},"classes/Matrix2.html":{}}}],["assignhitrecord",{"_index":178,"title":{},"body":{"classes/Esfera.html":{}}}],["assignhitrecord(valor",{"_index":189,"title":{},"body":{"classes/Esfera.html":{}}}],["atenuado",{"_index":591,"title":{},"body":{"classes/Metal.html":{},"classes/Vidro.html":{}}}],["atenuação",{"_index":592,"title":{},"body":{"classes/Metal.html":{},"classes/Vidro.html":{}}}],["atingida",{"_index":272,"title":{},"body":{"classes/HitRecord.html":{},"classes/Hittable.html":{}}}],["atingido",{"_index":217,"title":{},"body":{"classes/Esfera.html":{},"classes/HittableList.html":{}}}],["atingidos",{"_index":229,"title":{},"body":{"classes/Esfera.html":{},"classes/HittableList.html":{}}}],["atingir",{"_index":224,"title":{},"body":{"classes/Esfera.html":{},"classes/HittableList.html":{}}}],["atividade",{"_index":775,"title":{},"body":{"index.html":{}}}],["atividade06",{"_index":26,"title":{},"body":{"components/AppComponent.html":{}}}],["attenuation",{"_index":489,"title":{},"body":{"classes/Material.html":{},"classes/Metal.html":{},"classes/Vidro.html":{}}}],["attenuation.x",{"_index":702,"title":{},"body":{"classes/Vidro.html":{}}}],["attenuation.y",{"_index":703,"title":{},"body":{"classes/Vidro.html":{}}}],["attenuation.z",{"_index":704,"title":{},"body":{"classes/Vidro.html":{}}}],["b",{"_index":242,"title":{},"body":{"classes/Esfera.html":{}}}],["b*b",{"_index":246,"title":{},"body":{"classes/Esfera.html":{}}}],["base",{"_index":669,"title":{},"body":{"components/SalvarComponent.html":{}}}],["boolean",{"_index":207,"title":{},"body":{"classes/Esfera.html":{},"classes/Hittable.html":{},"classes/HittableList.html":{},"classes/Material.html":{},"classes/Metal.html":{},"classes/Vidro.html":{}}}],["bootstrap",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["box",{"_index":85,"title":{},"body":{"components/CanvasBoxComponent.html":{}}}],["box'},{'name",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"components/CanvasBoxComponent.html":{},"components/LerObjComponent.html":{},"components/SalvarComponent.html":{}}}],["box.component",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["box.component.css",{"_index":87,"title":{},"body":{"components/CanvasBoxComponent.html":{}}}],["box.component.html",{"_index":86,"title":{},"body":{"components/CanvasBoxComponent.html":{}}}],["box.component.ts",{"_index":82,"title":{},"body":{"components/CanvasBoxComponent.html":{},"coverage.html":{}}}],["box.component.ts:18",{"_index":132,"title":{},"body":{"components/CanvasBoxComponent.html":{}}}],["box.component.ts:20",{"_index":134,"title":{},"body":{"components/CanvasBoxComponent.html":{}}}],["box.component.ts:21",{"_index":136,"title":{},"body":{"components/CanvasBoxComponent.html":{}}}],["box.component.ts:22",{"_index":139,"title":{},"body":{"components/CanvasBoxComponent.html":{}}}],["box.component.ts:23",{"_index":128,"title":{},"body":{"components/CanvasBoxComponent.html":{}}}],["box.component.ts:24",{"_index":137,"title":{},"body":{"components/CanvasBoxComponent.html":{}}}],["box.component.ts:26",{"_index":130,"title":{},"body":{"components/CanvasBoxComponent.html":{}}}],["box.component.ts:27",{"_index":141,"title":{},"body":{"components/CanvasBoxComponent.html":{}}}],["box.component.ts:28",{"_index":123,"title":{},"body":{"components/CanvasBoxComponent.html":{}}}],["box.component.ts:29",{"_index":124,"title":{},"body":{"components/CanvasBoxComponent.html":{}}}],["box.component.ts:30",{"_index":121,"title":{},"body":{"components/CanvasBoxComponent.html":{}}}],["box.component.ts:31",{"_index":117,"title":{},"body":{"components/CanvasBoxComponent.html":{}}}],["box.component.ts:33",{"_index":103,"title":{},"body":{"components/CanvasBoxComponent.html":{}}}],["box.component.ts:59",{"_index":111,"title":{},"body":{"components/CanvasBoxComponent.html":{}}}],["box/canvas",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"components/CanvasBoxComponent.html":{},"coverage.html":{}}}],["browse",{"_index":802,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":74,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodule",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["c",{"_index":244,"title":{},"body":{"classes/Esfera.html":{}}}],["cada",{"_index":626,"title":{},"body":{"components/SalvarComponent.html":{}}}],["calcula",{"_index":213,"title":{},"body":{"classes/Esfera.html":{},"classes/HittableList.html":{}}}],["calculardeterminante",{"_index":494,"title":{},"body":{"classes/Matrix2.html":{}}}],["camera",{"_index":383,"title":{},"body":{"components/LerObjComponent.html":{}}}],["cameracenter",{"_index":88,"title":{},"body":{"components/CanvasBoxComponent.html":{}}}],["cameracornerlowerleft",{"_index":89,"title":{},"body":{"components/CanvasBoxComponent.html":{}}}],["camerahorizontal",{"_index":90,"title":{},"body":{"components/CanvasBoxComponent.html":{}}}],["cameravertical",{"_index":91,"title":{},"body":{"components/CanvasBoxComponent.html":{}}}],["canvas",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"components/CanvasBoxComponent.html":{},"components/LerObjComponent.html":{},"components/SalvarComponent.html":{}}}],["canvas.getcontext(\"2d",{"_index":671,"title":{},"body":{"components/SalvarComponent.html":{}}}],["canvas.getcontext(\"2d\")!.drawimage(img",{"_index":672,"title":{},"body":{"components/SalvarComponent.html":{}}}],["canvas.todataurl(\"image/png",{"_index":639,"title":{},"body":{"components/SalvarComponent.html":{}}}],["canvasboxcomponent",{"_index":41,"title":{"components/CanvasBoxComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CanvasBoxComponent.html":{},"components/LerObjComponent.html":{},"components/SalvarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["canvasid",{"_index":613,"title":{},"body":{"components/SalvarComponent.html":{}}}],["carrega",{"_index":398,"title":{},"body":{"components/LerObjComponent.html":{}}}],["cena",{"_index":410,"title":{},"body":{"components/LerObjComponent.html":{}}}],["center",{"_index":190,"title":{},"body":{"classes/Esfera.html":{}}}],["centro",{"_index":202,"title":{},"body":{"classes/Esfera.html":{}}}],["child",{"_index":466,"title":{},"body":{"components/LerObjComponent.html":{}}}],["class",{"_index":32,"title":{"classes/Esfera.html":{},"classes/HitRecord.html":{},"classes/Hittable.html":{},"classes/HittableList.html":{},"classes/Imagem.html":{},"classes/Material.html":{},"classes/Matrix2.html":{},"classes/Metal.html":{},"classes/Vidro.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CanvasBoxComponent.html":{},"classes/Esfera.html":{},"classes/HitRecord.html":{},"classes/Hittable.html":{},"classes/HittableList.html":{},"classes/Imagem.html":{},"components/LerObjComponent.html":{},"classes/Material.html":{},"classes/Matrix2.html":{},"classes/Metal.html":{},"components/SalvarComponent.html":{},"classes/Vidro.html":{},"coverage.html":{}}}],["classe",{"_index":312,"title":{},"body":{"classes/Hittable.html":{},"classes/HittableList.html":{},"classes/Material.html":{}}}],["classes",{"_index":171,"title":{},"body":{"classes/Esfera.html":{},"classes/HitRecord.html":{},"classes/Hittable.html":{},"classes/HittableList.html":{},"classes/Imagem.html":{},"classes/Material.html":{},"classes/Matrix2.html":{},"classes/Metal.html":{},"classes/Vidro.html":{},"overview.html":{}}}],["classes/esfera",{"_index":150,"title":{},"body":{"components/CanvasBoxComponent.html":{}}}],["classes/hit",{"_index":156,"title":{},"body":{"components/CanvasBoxComponent.html":{}}}],["classes/hittable",{"_index":147,"title":{},"body":{"components/CanvasBoxComponent.html":{}}}],["classes/imagem",{"_index":146,"title":{},"body":{"components/CanvasBoxComponent.html":{},"components/SalvarComponent.html":{}}}],["classes/manipulacao",{"_index":143,"title":{},"body":{"components/CanvasBoxComponent.html":{}}}],["classes/material/metal",{"_index":152,"title":{},"body":{"components/CanvasBoxComponent.html":{}}}],["classes/material/vidro",{"_index":154,"title":{},"body":{"components/CanvasBoxComponent.html":{}}}],["cli",{"_index":782,"title":{},"body":{"index.html":{}}}],["closesthit",{"_index":333,"title":{},"body":{"classes/HittableList.html":{}}}],["cluster_appmodule",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["coisa",{"_index":270,"title":{},"body":{"classes/HitRecord.html":{},"classes/Hittable.html":{}}}],["color",{"_index":657,"title":{},"body":{"components/SalvarComponent.html":{}}}],["com",{"_index":353,"title":{},"body":{"classes/Imagem.html":{},"components/LerObjComponent.html":{},"components/SalvarComponent.html":{},"index.html":{}}}],["comando",{"_index":787,"title":{},"body":{"index.html":{}}}],["como",{"_index":617,"title":{},"body":{"components/SalvarComponent.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/CanvasBoxComponent.html":{},"components/LerObjComponent.html":{},"components/SalvarComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CanvasBoxComponent.html":{},"components/LerObjComponent.html":{},"components/SalvarComponent.html":{},"coverage.html":{}}}],["component_template",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/CanvasBoxComponent.html":{},"components/LerObjComponent.html":{},"components/SalvarComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/CanvasBoxComponent.html":{},"components/LerObjComponent.html":{},"components/SalvarComponent.html":{},"overview.html":{}}}],["components/canvas",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["components/ler",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["components/salvar/salvar.component",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["console.log((xhr.loaded",{"_index":476,"title":{},"body":{"components/LerObjComponent.html":{}}}],["console.log(error",{"_index":481,"title":{},"body":{"components/LerObjComponent.html":{}}}],["const",{"_index":448,"title":{},"body":{"components/LerObjComponent.html":{},"components/SalvarComponent.html":{}}}],["constructor",{"_index":180,"title":{},"body":{"classes/Esfera.html":{},"classes/HitRecord.html":{},"classes/HittableList.html":{},"classes/Imagem.html":{},"classes/Matrix2.html":{},"classes/Metal.html":{},"classes/Vidro.html":{}}}],["constructor(albedo",{"_index":563,"title":{},"body":{"classes/Metal.html":{}}}],["constructor(indicerefrativo",{"_index":677,"title":{},"body":{"classes/Vidro.html":{}}}],["constructor(listhitable",{"_index":323,"title":{},"body":{"classes/HittableList.html":{}}}],["constructor(n11",{"_index":502,"title":{},"body":{"classes/Matrix2.html":{}}}],["constructor(resolucaox",{"_index":343,"title":{},"body":{"classes/Imagem.html":{}}}],["constructor(vectorcenter",{"_index":181,"title":{},"body":{"classes/Esfera.html":{}}}],["controles",{"_index":409,"title":{},"body":{"components/LerObjComponent.html":{}}}],["controls",{"_index":384,"title":{},"body":{"components/LerObjComponent.html":{}}}],["cor",{"_index":354,"title":{},"body":{"classes/Imagem.html":{}}}],["cores",{"_index":625,"title":{},"body":{"components/SalvarComponent.html":{}}}],["cosseno",{"_index":694,"title":{},"body":{"classes/Vidro.html":{}}}],["coverage",{"_index":725,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cria",{"_index":588,"title":{},"body":{"classes/Metal.html":{},"classes/Vidro.html":{}}}],["câmera",{"_index":407,"title":{},"body":{"components/LerObjComponent.html":{}}}],["da",{"_index":203,"title":{},"body":{"classes/Esfera.html":{},"classes/Imagem.html":{},"components/LerObjComponent.html":{},"classes/Metal.html":{},"components/SalvarComponent.html":{},"classes/Vidro.html":{}}}],["data:application/octet",{"_index":643,"title":{},"body":{"components/SalvarComponent.html":{}}}],["de",{"_index":204,"title":{},"body":{"classes/Esfera.html":{},"classes/HittableList.html":{},"classes/Imagem.html":{},"components/LerObjComponent.html":{},"classes/Metal.html":{},"components/SalvarComponent.html":{},"classes/Vidro.html":{}}}],["declarations",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["default",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"components/CanvasBoxComponent.html":{},"classes/Esfera.html":{},"classes/HitRecord.html":{},"components/LerObjComponent.html":{},"classes/Metal.html":{},"components/SalvarComponent.html":{},"classes/Vidro.html":{}}}],["define",{"_index":403,"title":{},"body":{"components/LerObjComponent.html":{}}}],["defined",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"components/CanvasBoxComponent.html":{},"classes/Esfera.html":{},"classes/HitRecord.html":{},"classes/Hittable.html":{},"classes/HittableList.html":{},"classes/Imagem.html":{},"components/LerObjComponent.html":{},"classes/Material.html":{},"classes/Matrix2.html":{},"classes/Metal.html":{},"components/SalvarComponent.html":{},"classes/Vidro.html":{}}}],["dentro",{"_index":581,"title":{},"body":{"classes/Metal.html":{}}}],["dependencies",{"_index":56,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":200,"title":{},"body":{"classes/Esfera.html":{},"classes/HitRecord.html":{},"classes/Hittable.html":{},"classes/HittableList.html":{},"classes/Imagem.html":{},"classes/Material.html":{},"classes/Metal.html":{},"components/SalvarComponent.html":{},"classes/Vidro.html":{}}}],["det",{"_index":552,"title":{},"body":{"classes/Matrix2.html":{}}}],["directive",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"components/CanvasBoxComponent.html":{},"components/LerObjComponent.html":{},"components/SalvarComponent.html":{}}}],["directives",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"components/CanvasBoxComponent.html":{},"components/LerObjComponent.html":{},"components/SalvarComponent.html":{}}}],["direção",{"_index":573,"title":{},"body":{"classes/Metal.html":{},"classes/Vidro.html":{}}}],["discriminante",{"_index":245,"title":{},"body":{"classes/Esfera.html":{}}}],["dispersados",{"_index":593,"title":{},"body":{"classes/Metal.html":{},"classes/Vidro.html":{}}}],["docs",{"_index":797,"title":{},"body":{"index.html":{}}}],["document.body.appendchild(this.renderer.domelement",{"_index":447,"title":{},"body":{"components/LerObjComponent.html":{}}}],["document.createelement(\"a",{"_index":640,"title":{},"body":{"components/SalvarComponent.html":{}}}],["document.getelementbyid(\"canvas",{"_index":648,"title":{},"body":{"components/SalvarComponent.html":{}}}],["document.getelementbyid(this.canvasid",{"_index":635,"title":{},"body":{"components/SalvarComponent.html":{}}}],["documentation",{"_index":726,"title":{},"body":{"coverage.html":{}}}],["documentação",{"_index":794,"title":{},"body":{"index.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/CanvasBoxComponent.html":{},"components/LerObjComponent.html":{},"components/SalvarComponent.html":{}}}],["dos",{"_index":227,"title":{},"body":{"classes/Esfera.html":{},"classes/HittableList.html":{},"classes/Imagem.html":{}}}],["dynamic",{"_index":757,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":400,"title":{},"body":{"components/LerObjComponent.html":{},"classes/Metal.html":{},"components/SalvarComponent.html":{},"classes/Vidro.html":{}}}],["eixo",{"_index":365,"title":{},"body":{"classes/Imagem.html":{}}}],["element",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"components/CanvasBoxComponent.html":{},"components/LerObjComponent.html":{},"components/SalvarComponent.html":{}}}],["em",{"_index":631,"title":{},"body":{"components/SalvarComponent.html":{}}}],["entre",{"_index":568,"title":{},"body":{"classes/Metal.html":{},"classes/Vidro.html":{}}}],["erro",{"_index":652,"title":{},"body":{"components/SalvarComponent.html":{}}}],["error",{"_index":480,"title":{},"body":{"components/LerObjComponent.html":{}}}],["escalar",{"_index":514,"title":{},"body":{"classes/Matrix2.html":{}}}],["esfera",{"_index":149,"title":{"classes/Esfera.html":{}},"body":{"components/CanvasBoxComponent.html":{},"classes/Esfera.html":{},"classes/Metal.html":{},"components/SalvarComponent.html":{},"coverage.html":{}}}],["esfera(this.manipula.criarvector3",{"_index":167,"title":{},"body":{"components/CanvasBoxComponent.html":{}}}],["esfera(this.manipula.criarvector3(1",{"_index":162,"title":{},"body":{"components/CanvasBoxComponent.html":{}}}],["especificado",{"_index":219,"title":{},"body":{"classes/Esfera.html":{},"classes/HittableList.html":{}}}],["esse",{"_index":777,"title":{},"body":{"index.html":{}}}],["estrutura",{"_index":265,"title":{},"body":{"classes/HitRecord.html":{}}}],["executar",{"_index":790,"title":{},"body":{"index.html":{}}}],["execução",{"_index":785,"title":{},"body":{"index.html":{}}}],["exibe",{"_index":622,"title":{},"body":{"components/SalvarComponent.html":{}}}],["export",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CanvasBoxComponent.html":{},"classes/Esfera.html":{},"classes/HitRecord.html":{},"classes/Hittable.html":{},"classes/HittableList.html":{},"classes/Imagem.html":{},"components/LerObjComponent.html":{},"classes/Material.html":{},"classes/Matrix2.html":{},"classes/Metal.html":{},"components/SalvarComponent.html":{},"classes/Vidro.html":{}}}],["exports",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["extends",{"_index":173,"title":{},"body":{"classes/Esfera.html":{},"classes/HittableList.html":{},"classes/Metal.html":{},"classes/Vidro.html":{}}}],["false",{"_index":253,"title":{},"body":{"classes/Esfera.html":{},"classes/HittableList.html":{},"classes/Vidro.html":{}}}],["fator",{"_index":571,"title":{},"body":{"classes/Metal.html":{},"classes/Vidro.html":{}}}],["feito",{"_index":486,"title":{},"body":{"classes/Material.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CanvasBoxComponent.html":{},"classes/Esfera.html":{},"classes/HitRecord.html":{},"classes/Hittable.html":{},"classes/HittableList.html":{},"classes/Imagem.html":{},"components/LerObjComponent.html":{},"classes/Material.html":{},"classes/Matrix2.html":{},"classes/Metal.html":{},"components/SalvarComponent.html":{},"classes/Vidro.html":{},"coverage.html":{}}}],["final",{"_index":225,"title":{},"body":{"classes/Esfera.html":{},"classes/HittableList.html":{}}}],["foi",{"_index":779,"title":{},"body":{"index.html":{}}}],["for(let",{"_index":334,"title":{},"body":{"classes/HittableList.html":{}}}],["frontface",{"_index":685,"title":{},"body":{"classes/Vidro.html":{}}}],["função",{"_index":192,"title":{},"body":{"classes/Esfera.html":{},"classes/Imagem.html":{},"classes/Metal.html":{},"components/SalvarComponent.html":{},"classes/Vidro.html":{}}}],["fuzz",{"_index":564,"title":{},"body":{"classes/Metal.html":{}}}],["genérica",{"_index":266,"title":{},"body":{"classes/HitRecord.html":{},"classes/Hittable.html":{},"classes/Material.html":{}}}],["gera",{"_index":620,"title":{},"body":{"components/SalvarComponent.html":{}}}],["gerado",{"_index":780,"title":{},"body":{"index.html":{}}}],["gerarimagem",{"_index":611,"title":{},"body":{"components/SalvarComponent.html":{}}}],["gerarimagem(imagem",{"_index":618,"title":{},"body":{"components/SalvarComponent.html":{}}}],["getmaterial",{"_index":299,"title":{},"body":{"classes/HitRecord.html":{}}}],["getnormal",{"_index":295,"title":{},"body":{"classes/HitRecord.html":{}}}],["getp",{"_index":291,"title":{},"body":{"classes/HitRecord.html":{}}}],["getpixelmatriz",{"_index":357,"title":{},"body":{"classes/Imagem.html":{}}}],["getresolucao",{"_index":360,"title":{},"body":{"classes/Imagem.html":{}}}],["getresolucaox",{"_index":362,"title":{},"body":{"classes/Imagem.html":{}}}],["getresolucaoy",{"_index":367,"title":{},"body":{"classes/Imagem.html":{}}}],["getsize",{"_index":328,"title":{},"body":{"classes/HittableList.html":{}}}],["gett",{"_index":287,"title":{},"body":{"classes/HitRecord.html":{}}}],["getting",{"_index":773,"title":{"index.html":{}},"body":{}}],["guardar",{"_index":268,"title":{},"body":{"classes/HitRecord.html":{}}}],["hashitsomething",{"_index":332,"title":{},"body":{"classes/HittableList.html":{}}}],["hit",{"_index":179,"title":{},"body":{"classes/Esfera.html":{},"classes/Hittable.html":{},"classes/HittableList.html":{},"classes/Material.html":{},"classes/Metal.html":{},"classes/Vidro.html":{}}}],["hit(ray",{"_index":208,"title":{},"body":{"classes/Esfera.html":{},"classes/Hittable.html":{},"classes/HittableList.html":{}}}],["hitrecord",{"_index":155,"title":{"classes/HitRecord.html":{}},"body":{"components/CanvasBoxComponent.html":{},"classes/Esfera.html":{},"classes/HitRecord.html":{},"classes/Hittable.html":{},"classes/HittableList.html":{},"classes/Material.html":{},"classes/Metal.html":{},"classes/Vidro.html":{},"coverage.html":{}}}],["hitrecord.material",{"_index":261,"title":{},"body":{"classes/Esfera.html":{}}}],["hitrecord.normal",{"_index":258,"title":{},"body":{"classes/Esfera.html":{},"classes/Vidro.html":{}}}],["hitrecord.p",{"_index":255,"title":{},"body":{"classes/Esfera.html":{},"classes/Vidro.html":{}}}],["hitrecord.t",{"_index":254,"title":{},"body":{"classes/Esfera.html":{}}}],["hitrecordnormal",{"_index":698,"title":{},"body":{"classes/Vidro.html":{}}}],["hittable",{"_index":174,"title":{"classes/Hittable.html":{}},"body":{"classes/Esfera.html":{},"classes/Hittable.html":{},"classes/HittableList.html":{},"coverage.html":{}}}],["hittable:27",{"_index":212,"title":{},"body":{"classes/Esfera.html":{}}}],["hittable:30",{"_index":327,"title":{},"body":{"classes/HittableList.html":{}}}],["hittablelist",{"_index":108,"title":{"classes/HittableList.html":{}},"body":{"components/CanvasBoxComponent.html":{},"classes/HittableList.html":{},"coverage.html":{}}}],["hittablelist(this.listhittable",{"_index":140,"title":{},"body":{"components/CanvasBoxComponent.html":{}}}],["hittables",{"_index":320,"title":{},"body":{"classes/HittableList.html":{}}}],["html",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"components/CanvasBoxComponent.html":{},"components/LerObjComponent.html":{},"components/SalvarComponent.html":{}}}],["htmlcanvaselement",{"_index":636,"title":{},"body":{"components/SalvarComponent.html":{}}}],["http://127.0.0.1:8080",{"_index":799,"title":{},"body":{"index.html":{}}}],["http://localhost:4200",{"_index":793,"title":{},"body":{"index.html":{}}}],["id",{"_index":615,"title":{},"body":{"components/SalvarComponent.html":{}}}],["identifier",{"_index":727,"title":{},"body":{"coverage.html":{}}}],["if(canvas",{"_index":637,"title":{},"body":{"components/SalvarComponent.html":{}}}],["if(fuzz",{"_index":595,"title":{},"body":{"classes/Metal.html":{}}}],["if(math.random",{"_index":711,"title":{},"body":{"classes/Vidro.html":{}}}],["if(posy",{"_index":377,"title":{},"body":{"classes/Imagem.html":{}}}],["if(temp",{"_index":250,"title":{},"body":{"classes/Esfera.html":{}}}],["if(this.listhittable",{"_index":159,"title":{},"body":{"components/CanvasBoxComponent.html":{}}}],["iluminação",{"_index":408,"title":{},"body":{"components/LerObjComponent.html":{}}}],["image",{"_index":638,"title":{},"body":{"components/SalvarComponent.html":{}}}],["image(imagemjimp.bitmap.width",{"_index":666,"title":{},"body":{"components/SalvarComponent.html":{}}}],["image.replace(/^data:image",{"_index":642,"title":{},"body":{"components/SalvarComponent.html":{}}}],["imagem",{"_index":92,"title":{"classes/Imagem.html":{}},"body":{"components/CanvasBoxComponent.html":{},"classes/Imagem.html":{},"components/SalvarComponent.html":{},"coverage.html":{}}}],["imagem(this.resolucaox",{"_index":126,"title":{},"body":{"components/CanvasBoxComponent.html":{}}}],["imagem.pixelmatriz.foreach((pixelrow",{"_index":655,"title":{},"body":{"components/SalvarComponent.html":{}}}],["imagem.resolucaoy",{"_index":651,"title":{},"body":{"components/SalvarComponent.html":{}}}],["imagemjimp",{"_index":649,"title":{},"body":{"components/SalvarComponent.html":{}}}],["imagemjimp.bitmap.height",{"_index":667,"title":{},"body":{"components/SalvarComponent.html":{}}}],["img",{"_index":665,"title":{},"body":{"components/SalvarComponent.html":{}}}],["img.onload",{"_index":670,"title":{},"body":{"components/SalvarComponent.html":{}}}],["img.src",{"_index":668,"title":{},"body":{"components/SalvarComponent.html":{}}}],["implements",{"_index":83,"title":{},"body":{"components/CanvasBoxComponent.html":{},"components/LerObjComponent.html":{}}}],["import",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CanvasBoxComponent.html":{},"classes/Esfera.html":{},"classes/HitRecord.html":{},"classes/Hittable.html":{},"classes/HittableList.html":{},"classes/Imagem.html":{},"components/LerObjComponent.html":{},"classes/Material.html":{},"classes/Metal.html":{},"components/SalvarComponent.html":{},"classes/Vidro.html":{}}}],["imports",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["incidente",{"_index":570,"title":{},"body":{"classes/Metal.html":{},"classes/Vidro.html":{}}}],["incidência",{"_index":196,"title":{},"body":{"classes/Esfera.html":{}}}],["incidências",{"_index":206,"title":{},"body":{"classes/Esfera.html":{}}}],["index",{"_index":18,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"components/CanvasBoxComponent.html":{},"classes/Esfera.html":{},"classes/HitRecord.html":{},"classes/Hittable.html":{},"classes/HittableList.html":{},"classes/Imagem.html":{},"components/LerObjComponent.html":{},"classes/Material.html":{},"classes/Matrix2.html":{},"classes/Metal.html":{},"components/SalvarComponent.html":{},"classes/Vidro.html":{}}}],["indicerefrativo",{"_index":679,"title":{},"body":{"classes/Vidro.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CanvasBoxComponent.html":{},"classes/Esfera.html":{},"classes/HitRecord.html":{},"classes/Hittable.html":{},"classes/HittableList.html":{},"classes/Imagem.html":{},"components/LerObjComponent.html":{},"classes/Material.html":{},"classes/Matrix2.html":{},"classes/Metal.html":{},"components/SalvarComponent.html":{},"classes/Vidro.html":{}}}],["informações",{"_index":624,"title":{},"body":{"components/SalvarComponent.html":{}}}],["inherited",{"_index":211,"title":{},"body":{"classes/Esfera.html":{},"classes/HittableList.html":{},"classes/Metal.html":{},"classes/Vidro.html":{}}}],["input",{"_index":428,"title":{},"body":{"components/LerObjComponent.html":{},"components/SalvarComponent.html":{}}}],["inputs",{"_index":392,"title":{},"body":{"components/LerObjComponent.html":{},"components/SalvarComponent.html":{}}}],["interface",{"_index":696,"title":{},"body":{"classes/Vidro.html":{}}}],["intervalo",{"_index":221,"title":{},"body":{"classes/Esfera.html":{},"classes/HittableList.html":{}}}],["inverter",{"_index":495,"title":{},"body":{"classes/Matrix2.html":{}}}],["inverter(m1",{"_index":510,"title":{},"body":{"classes/Matrix2.html":{}}}],["início",{"_index":220,"title":{},"body":{"classes/Esfera.html":{},"classes/HittableList.html":{}}}],["ir0",{"_index":722,"title":{},"body":{"classes/Vidro.html":{}}}],["j",{"_index":170,"title":{},"body":{"components/CanvasBoxComponent.html":{}}}],["jimp",{"_index":633,"title":{},"body":{"components/SalvarComponent.html":{},"dependencies.html":{}}}],["jimp(imagem.resolucaox",{"_index":650,"title":{},"body":{"components/SalvarComponent.html":{}}}],["jimp.rgbatoint((pixel.x",{"_index":658,"title":{},"body":{"components/SalvarComponent.html":{}}}],["jimp/browser/lib/jimp.js",{"_index":634,"title":{},"body":{"components/SalvarComponent.html":{}}}],["legend",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CanvasBoxComponent.html":{},"components/LerObjComponent.html":{},"components/SalvarComponent.html":{},"overview.html":{}}}],["ler",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/CanvasBoxComponent.html":{},"components/LerObjComponent.html":{},"components/SalvarComponent.html":{}}}],["lerobjcomponent",{"_index":44,"title":{"components/LerObjComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CanvasBoxComponent.html":{},"components/LerObjComponent.html":{},"components/SalvarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["light",{"_index":385,"title":{},"body":{"components/LerObjComponent.html":{}}}],["list",{"_index":148,"title":{},"body":{"components/CanvasBoxComponent.html":{}}}],["list.ts",{"_index":316,"title":{},"body":{"classes/HittableList.html":{},"coverage.html":{}}}],["list.ts:19",{"_index":329,"title":{},"body":{"classes/HittableList.html":{}}}],["list.ts:9",{"_index":324,"title":{},"body":{"classes/HittableList.html":{}}}],["lista",{"_index":319,"title":{},"body":{"classes/HittableList.html":{}}}],["listhitable",{"_index":326,"title":{},"body":{"classes/HittableList.html":{}}}],["listhittable",{"_index":93,"title":{},"body":{"components/CanvasBoxComponent.html":{}}}],["loaded",{"_index":479,"title":{},"body":{"components/LerObjComponent.html":{}}}],["loadobj",{"_index":390,"title":{},"body":{"components/LerObjComponent.html":{}}}],["locais",{"_index":228,"title":{},"body":{"classes/Esfera.html":{},"classes/HittableList.html":{}}}],["luz",{"_index":205,"title":{},"body":{"classes/Esfera.html":{},"classes/HittableList.html":{},"classes/Metal.html":{},"classes/Vidro.html":{}}}],["m",{"_index":521,"title":{},"body":{"classes/Matrix2.html":{}}}],["m.matrix2[0][0",{"_index":548,"title":{},"body":{"classes/Matrix2.html":{}}}],["m.matrix2[0][1",{"_index":549,"title":{},"body":{"classes/Matrix2.html":{}}}],["m.matrix2[1][0",{"_index":550,"title":{},"body":{"classes/Matrix2.html":{}}}],["m.matrix2[1][1",{"_index":551,"title":{},"body":{"classes/Matrix2.html":{}}}],["m1",{"_index":512,"title":{},"body":{"classes/Matrix2.html":{}}}],["m1.calculardeterminante",{"_index":553,"title":{},"body":{"classes/Matrix2.html":{}}}],["m1.matrix2[0][0",{"_index":537,"title":{},"body":{"classes/Matrix2.html":{}}}],["m1.matrix2[0][0]*(1/det",{"_index":557,"title":{},"body":{"classes/Matrix2.html":{}}}],["m1.matrix2[0][1",{"_index":540,"title":{},"body":{"classes/Matrix2.html":{}}}],["m1.matrix2[0][1]*(1/det",{"_index":555,"title":{},"body":{"classes/Matrix2.html":{}}}],["m1.matrix2[1][0",{"_index":543,"title":{},"body":{"classes/Matrix2.html":{}}}],["m1.matrix2[1][0]*(1/det",{"_index":556,"title":{},"body":{"classes/Matrix2.html":{}}}],["m1.matrix2[1][1",{"_index":546,"title":{},"body":{"classes/Matrix2.html":{}}}],["m1.matrix2[1][1]*(1/det",{"_index":554,"title":{},"body":{"classes/Matrix2.html":{}}}],["m2",{"_index":517,"title":{},"body":{"classes/Matrix2.html":{}}}],["m2.matrix2[0][0",{"_index":538,"title":{},"body":{"classes/Matrix2.html":{}}}],["m2.matrix2[0][1",{"_index":541,"title":{},"body":{"classes/Matrix2.html":{}}}],["m2.matrix2[1][0",{"_index":544,"title":{},"body":{"classes/Matrix2.html":{}}}],["m2.matrix2[1][1",{"_index":547,"title":{},"body":{"classes/Matrix2.html":{}}}],["m3",{"_index":535,"title":{},"body":{"classes/Matrix2.html":{}}}],["m3.matrix2[0][0",{"_index":536,"title":{},"body":{"classes/Matrix2.html":{}}}],["m3.matrix2[0][1",{"_index":539,"title":{},"body":{"classes/Matrix2.html":{}}}],["m3.matrix2[1][0",{"_index":542,"title":{},"body":{"classes/Matrix2.html":{}}}],["m3.matrix2[1][1",{"_index":545,"title":{},"body":{"classes/Matrix2.html":{}}}],["manipula",{"_index":95,"title":{},"body":{"components/CanvasBoxComponent.html":{},"classes/Esfera.html":{},"classes/HitRecord.html":{},"classes/Metal.html":{},"classes/Vidro.html":{}}}],["manipulacao",{"_index":231,"title":{},"body":{"classes/Esfera.html":{},"classes/HitRecord.html":{},"classes/Metal.html":{},"classes/Vidro.html":{}}}],["manipulacaovetmat",{"_index":131,"title":{},"body":{"components/CanvasBoxComponent.html":{},"classes/Esfera.html":{},"classes/HitRecord.html":{},"classes/Metal.html":{},"classes/Vidro.html":{},"coverage.html":{}}}],["mat",{"_index":145,"title":{},"body":{"components/CanvasBoxComponent.html":{},"classes/Esfera.html":{},"classes/HitRecord.html":{},"classes/Metal.html":{},"classes/Vidro.html":{}}}],["mat.ts",{"_index":742,"title":{},"body":{"coverage.html":{}}}],["matching",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CanvasBoxComponent.html":{},"classes/Esfera.html":{},"classes/HitRecord.html":{},"classes/Hittable.html":{},"classes/HittableList.html":{},"classes/Imagem.html":{},"components/LerObjComponent.html":{},"classes/Material.html":{},"classes/Matrix2.html":{},"classes/Metal.html":{},"components/SalvarComponent.html":{},"classes/Vidro.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["material",{"_index":183,"title":{"classes/Material.html":{}},"body":{"classes/Esfera.html":{},"classes/HitRecord.html":{},"components/LerObjComponent.html":{},"classes/Material.html":{},"classes/Metal.html":{},"classes/Vidro.html":{},"coverage.html":{}}}],["material(material",{"_index":310,"title":{},"body":{"classes/HitRecord.html":{}}}],["material/material",{"_index":230,"title":{},"body":{"classes/Esfera.html":{},"classes/HitRecord.html":{}}}],["material:29",{"_index":689,"title":{},"body":{"classes/Vidro.html":{}}}],["material:35",{"_index":587,"title":{},"body":{"classes/Metal.html":{}}}],["math.floor(this._resolucao",{"_index":376,"title":{},"body":{"classes/Imagem.html":{}}}],["math.pow((1",{"_index":723,"title":{},"body":{"classes/Vidro.html":{}}}],["math.random",{"_index":604,"title":{},"body":{"classes/Metal.html":{}}}],["math.sqrt(discriminante",{"_index":249,"title":{},"body":{"classes/Esfera.html":{},"classes/Vidro.html":{}}}],["matrix2",{"_index":492,"title":{"classes/Matrix2.html":{}},"body":{"classes/Matrix2.html":{},"coverage.html":{}}}],["matriz",{"_index":351,"title":{},"body":{"classes/Imagem.html":{},"components/SalvarComponent.html":{}}}],["maxdepth",{"_index":109,"title":{},"body":{"components/CanvasBoxComponent.html":{}}}],["mesh",{"_index":430,"title":{},"body":{"components/LerObjComponent.html":{}}}],["mesh).ismesh",{"_index":467,"title":{},"body":{"components/LerObjComponent.html":{}}}],["mesh).material",{"_index":464,"title":{},"body":{"components/LerObjComponent.html":{}}}],["meshbasicmaterial",{"_index":431,"title":{},"body":{"components/LerObjComponent.html":{}}}],["meshbasicmaterial({map",{"_index":461,"title":{},"body":{"components/LerObjComponent.html":{}}}],["metadata",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"components/CanvasBoxComponent.html":{},"components/LerObjComponent.html":{},"components/SalvarComponent.html":{}}}],["metal",{"_index":151,"title":{"classes/Metal.html":{}},"body":{"components/CanvasBoxComponent.html":{},"classes/Metal.html":{},"coverage.html":{}}}],["metal(this.manipula.criarvector3(0.8",{"_index":164,"title":{},"body":{"components/CanvasBoxComponent.html":{}}}],["methods",{"_index":100,"title":{},"body":{"components/CanvasBoxComponent.html":{},"classes/Esfera.html":{},"classes/Hittable.html":{},"classes/HittableList.html":{},"classes/Imagem.html":{},"components/LerObjComponent.html":{},"classes/Material.html":{},"classes/Matrix2.html":{},"classes/Metal.html":{},"components/SalvarComponent.html":{},"classes/Vidro.html":{}}}],["module",{"_index":53,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":55,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{}}}],["mostrada",{"_index":630,"title":{},"body":{"components/SalvarComponent.html":{}}}],["multiplicarescalar",{"_index":496,"title":{},"body":{"classes/Matrix2.html":{}}}],["multiplicarescalar(m1",{"_index":513,"title":{},"body":{"classes/Matrix2.html":{}}}],["multiplicarmatrizes",{"_index":497,"title":{},"body":{"classes/Matrix2.html":{}}}],["multiplicarmatrizes(m1",{"_index":516,"title":{},"body":{"classes/Matrix2.html":{}}}],["n11",{"_index":507,"title":{},"body":{"classes/Matrix2.html":{}}}],["n12",{"_index":503,"title":{},"body":{"classes/Matrix2.html":{}}}],["n21",{"_index":504,"title":{},"body":{"classes/Matrix2.html":{}}}],["n22",{"_index":505,"title":{},"body":{"classes/Matrix2.html":{}}}],["na",{"_index":356,"title":{},"body":{"classes/Imagem.html":{},"components/SalvarComponent.html":{},"index.html":{}}}],["name",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"components/CanvasBoxComponent.html":{},"classes/Esfera.html":{},"classes/HitRecord.html":{},"classes/Hittable.html":{},"classes/HittableList.html":{},"classes/Imagem.html":{},"components/LerObjComponent.html":{},"classes/Material.html":{},"classes/Matrix2.html":{},"classes/Metal.html":{},"components/SalvarComponent.html":{},"classes/Vidro.html":{}}}],["ndice",{"_index":680,"title":{},"body":{"classes/Vidro.html":{}}}],["new",{"_index":125,"title":{},"body":{"components/CanvasBoxComponent.html":{},"classes/Esfera.html":{},"classes/HitRecord.html":{},"components/LerObjComponent.html":{},"classes/Matrix2.html":{},"classes/Metal.html":{},"components/SalvarComponent.html":{},"classes/Vidro.html":{},"coverage.html":{}}}],["ngmodule",{"_index":75,"title":{},"body":{"modules/AppModule.html":{}}}],["ngoninit",{"_index":101,"title":{},"body":{"components/CanvasBoxComponent.html":{},"components/LerObjComponent.html":{}}}],["normal",{"_index":281,"title":{},"body":{"classes/HitRecord.html":{},"classes/Metal.html":{},"classes/Vidro.html":{}}}],["normal(normal",{"_index":309,"title":{},"body":{"classes/HitRecord.html":{}}}],["npm",{"_index":788,"title":{},"body":{"index.html":{}}}],["number",{"_index":110,"title":{},"body":{"components/CanvasBoxComponent.html":{},"classes/Esfera.html":{},"classes/HitRecord.html":{},"classes/Hittable.html":{},"classes/HittableList.html":{},"classes/Imagem.html":{},"classes/Matrix2.html":{},"classes/Metal.html":{},"components/SalvarComponent.html":{},"classes/Vidro.html":{}}}],["o",{"_index":195,"title":{},"body":{"classes/Esfera.html":{},"classes/HittableList.html":{},"classes/Imagem.html":{},"components/LerObjComponent.html":{},"classes/Material.html":{},"classes/Metal.html":{},"components/SalvarComponent.html":{},"classes/Vidro.html":{},"index.html":{}}}],["obj",{"_index":380,"title":{},"body":{"components/LerObjComponent.html":{}}}],["obj'},{'name",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"components/CanvasBoxComponent.html":{},"components/LerObjComponent.html":{},"components/SalvarComponent.html":{}}}],["obj.component",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["obj.component.css",{"_index":382,"title":{},"body":{"components/LerObjComponent.html":{}}}],["obj.component.html",{"_index":381,"title":{},"body":{"components/LerObjComponent.html":{}}}],["obj.component.ts",{"_index":379,"title":{},"body":{"components/LerObjComponent.html":{},"coverage.html":{}}}],["obj.component.ts:22",{"_index":395,"title":{},"body":{"components/LerObjComponent.html":{}}}],["obj.component.ts:23",{"_index":396,"title":{},"body":{"components/LerObjComponent.html":{}}}],["obj.component.ts:24",{"_index":426,"title":{},"body":{"components/LerObjComponent.html":{}}}],["obj.component.ts:25",{"_index":422,"title":{},"body":{"components/LerObjComponent.html":{}}}],["obj.component.ts:26",{"_index":417,"title":{},"body":{"components/LerObjComponent.html":{}}}],["obj.component.ts:27",{"_index":425,"title":{},"body":{"components/LerObjComponent.html":{}}}],["obj.component.ts:28",{"_index":427,"title":{},"body":{"components/LerObjComponent.html":{}}}],["obj.component.ts:29",{"_index":423,"title":{},"body":{"components/LerObjComponent.html":{}}}],["obj.component.ts:30",{"_index":420,"title":{},"body":{"components/LerObjComponent.html":{}}}],["obj.component.ts:35",{"_index":402,"title":{},"body":{"components/LerObjComponent.html":{}}}],["obj.component.ts:56",{"_index":397,"title":{},"body":{"components/LerObjComponent.html":{}}}],["obj.component.ts:83",{"_index":411,"title":{},"body":{"components/LerObjComponent.html":{}}}],["obj/ler",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"components/LerObjComponent.html":{},"coverage.html":{}}}],["object",{"_index":460,"title":{},"body":{"components/LerObjComponent.html":{}}}],["object.children[0",{"_index":463,"title":{},"body":{"components/LerObjComponent.html":{}}}],["object.position.set(0",{"_index":472,"title":{},"body":{"components/LerObjComponent.html":{}}}],["object.rotatex",{"_index":468,"title":{},"body":{"components/LerObjComponent.html":{}}}],["object.scale.set(0.08",{"_index":470,"title":{},"body":{"components/LerObjComponent.html":{}}}],["object.traverse(function",{"_index":465,"title":{},"body":{"components/LerObjComponent.html":{}}}],["objeto",{"_index":215,"title":{},"body":{"classes/Esfera.html":{},"classes/HittableList.html":{},"components/LerObjComponent.html":{},"classes/Material.html":{}}}],["objloader",{"_index":386,"title":{},"body":{"components/LerObjComponent.html":{}}}],["objurl",{"_index":393,"title":{},"body":{"components/LerObjComponent.html":{}}}],["onde",{"_index":222,"title":{},"body":{"classes/Esfera.html":{},"classes/HittableList.html":{}}}],["oninit",{"_index":84,"title":{},"body":{"components/CanvasBoxComponent.html":{},"components/LerObjComponent.html":{}}}],["optional",{"_index":113,"title":{},"body":{"components/CanvasBoxComponent.html":{},"classes/Esfera.html":{},"classes/HitRecord.html":{},"classes/Hittable.html":{},"classes/HittableList.html":{},"classes/Imagem.html":{},"classes/Material.html":{},"classes/Matrix2.html":{},"classes/Metal.html":{},"components/SalvarComponent.html":{},"classes/Vidro.html":{}}}],["orbitcontrols",{"_index":434,"title":{},"body":{"components/LerObjComponent.html":{}}}],["orbitcontrols(this.camera",{"_index":418,"title":{},"body":{"components/LerObjComponent.html":{}}}],["origincenter",{"_index":238,"title":{},"body":{"classes/Esfera.html":{}}}],["out",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["override",{"_index":237,"title":{},"body":{"classes/Esfera.html":{},"classes/HittableList.html":{},"classes/Vidro.html":{}}}],["overview",{"_index":803,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":280,"title":{},"body":{"classes/HitRecord.html":{}}}],["p(p",{"_index":308,"title":{},"body":{"classes/HitRecord.html":{}}}],["package",{"_index":751,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["padrão",{"_index":405,"title":{},"body":{"components/LerObjComponent.html":{}}}],["para",{"_index":267,"title":{},"body":{"classes/HitRecord.html":{},"classes/Hittable.html":{},"classes/Imagem.html":{},"classes/Material.html":{},"classes/Vidro.html":{},"index.html":{}}}],["param",{"_index":236,"title":{},"body":{"classes/Esfera.html":{},"classes/HittableList.html":{},"classes/Imagem.html":{},"classes/Metal.html":{},"components/SalvarComponent.html":{},"classes/Vidro.html":{}}}],["parameters",{"_index":112,"title":{},"body":{"components/CanvasBoxComponent.html":{},"classes/Esfera.html":{},"classes/HitRecord.html":{},"classes/Hittable.html":{},"classes/HittableList.html":{},"classes/Imagem.html":{},"classes/Material.html":{},"classes/Matrix2.html":{},"classes/Metal.html":{},"components/SalvarComponent.html":{},"classes/Vidro.html":{}}}],["partir",{"_index":621,"title":{},"body":{"components/SalvarComponent.html":{}}}],["pelo",{"_index":218,"title":{},"body":{"classes/Esfera.html":{},"classes/HittableList.html":{}}}],["perspectivecamera",{"_index":432,"title":{},"body":{"components/LerObjComponent.html":{}}}],["perspectivecamera(75",{"_index":413,"title":{},"body":{"components/LerObjComponent.html":{}}}],["pixel",{"_index":350,"title":{},"body":{"classes/Imagem.html":{},"components/SalvarComponent.html":{}}}],["pixel.y",{"_index":660,"title":{},"body":{"components/SalvarComponent.html":{}}}],["pixel.z",{"_index":661,"title":{},"body":{"components/SalvarComponent.html":{}}}],["pixelmatriz",{"_index":341,"title":{},"body":{"classes/Imagem.html":{}}}],["pixelrgb",{"_index":352,"title":{},"body":{"classes/Imagem.html":{}}}],["pixelrow.foreach((pixel",{"_index":656,"title":{},"body":{"components/SalvarComponent.html":{}}}],["pixels",{"_index":359,"title":{},"body":{"classes/Imagem.html":{},"components/SalvarComponent.html":{}}}],["png",{"_index":632,"title":{},"body":{"components/SalvarComponent.html":{}}}],["pode",{"_index":223,"title":{},"body":{"classes/Esfera.html":{},"classes/HittableList.html":{}}}],["pointlight",{"_index":433,"title":{},"body":{"components/LerObjComponent.html":{}}}],["pointlight(0xffffff",{"_index":421,"title":{},"body":{"components/LerObjComponent.html":{}}}],["por",{"_index":273,"title":{},"body":{"classes/HitRecord.html":{},"classes/Hittable.html":{}}}],["posição",{"_index":406,"title":{},"body":{"components/LerObjComponent.html":{}}}],["possa",{"_index":271,"title":{},"body":{"classes/HitRecord.html":{},"classes/Hittable.html":{}}}],["possui",{"_index":623,"title":{},"body":{"components/SalvarComponent.html":{}}}],["posx",{"_index":374,"title":{},"body":{"classes/Imagem.html":{}}}],["posy",{"_index":375,"title":{},"body":{"classes/Imagem.html":{}}}],["private",{"_index":94,"title":{},"body":{"components/CanvasBoxComponent.html":{},"classes/Esfera.html":{},"classes/Imagem.html":{},"classes/Metal.html":{},"classes/Vidro.html":{}}}],["process",{"_index":762,"title":{},"body":{"dependencies.html":{}}}],["produtoescalarvn",{"_index":597,"title":{},"body":{"classes/Metal.html":{},"classes/Vidro.html":{}}}],["projeto",{"_index":778,"title":{},"body":{"index.html":{}}}],["properties",{"_index":19,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"components/CanvasBoxComponent.html":{},"classes/Esfera.html":{},"classes/HitRecord.html":{},"classes/HittableList.html":{},"classes/Imagem.html":{},"components/LerObjComponent.html":{},"classes/Matrix2.html":{},"classes/Metal.html":{},"classes/Vidro.html":{},"properties.html":{}}}],["providers",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["qual",{"_index":485,"title":{},"body":{"classes/Material.html":{}}}],["qualquer",{"_index":269,"title":{},"body":{"classes/HitRecord.html":{},"classes/Hittable.html":{}}}],["que",{"_index":193,"title":{},"body":{"classes/Esfera.html":{},"classes/HitRecord.html":{},"classes/Hittable.html":{},"classes/HittableList.html":{},"classes/Imagem.html":{},"classes/Metal.html":{},"components/SalvarComponent.html":{},"classes/Vidro.html":{}}}],["radius",{"_index":182,"title":{},"body":{"classes/Esfera.html":{}}}],["raio",{"_index":197,"title":{},"body":{"classes/Esfera.html":{},"classes/HitRecord.html":{},"classes/Hittable.html":{},"classes/HittableList.html":{},"classes/Metal.html":{},"classes/Vidro.html":{}}}],["randominunitsphere",{"_index":561,"title":{},"body":{"classes/Metal.html":{}}}],["randomiza",{"_index":572,"title":{},"body":{"classes/Metal.html":{},"classes/Vidro.html":{}}}],["ray",{"_index":107,"title":{},"body":{"components/CanvasBoxComponent.html":{},"classes/Esfera.html":{},"classes/Hittable.html":{},"classes/HittableList.html":{},"classes/Material.html":{},"classes/Metal.html":{},"classes/Vidro.html":{}}}],["ray.direction",{"_index":241,"title":{},"body":{"classes/Esfera.html":{}}}],["ray.direction.length",{"_index":706,"title":{},"body":{"classes/Vidro.html":{}}}],["raycolor",{"_index":102,"title":{},"body":{"components/CanvasBoxComponent.html":{}}}],["raycolor(ray",{"_index":106,"title":{},"body":{"components/CanvasBoxComponent.html":{}}}],["raytmax",{"_index":210,"title":{},"body":{"classes/Esfera.html":{},"classes/Hittable.html":{},"classes/HittableList.html":{}}}],["raytmin",{"_index":209,"title":{},"body":{"classes/Esfera.html":{},"classes/Hittable.html":{},"classes/HittableList.html":{}}}],["razão",{"_index":567,"title":{},"body":{"classes/Metal.html":{},"classes/Vidro.html":{}}}],["record",{"_index":157,"title":{},"body":{"components/CanvasBoxComponent.html":{},"classes/Esfera.html":{},"classes/Hittable.html":{},"classes/HittableList.html":{},"classes/Material.html":{},"classes/Metal.html":{},"classes/Vidro.html":{}}}],["record.ts",{"_index":264,"title":{},"body":{"classes/HitRecord.html":{},"coverage.html":{}}}],["record.ts:10",{"_index":286,"title":{},"body":{"classes/HitRecord.html":{}}}],["record.ts:11",{"_index":285,"title":{},"body":{"classes/HitRecord.html":{}}}],["record.ts:12",{"_index":284,"title":{},"body":{"classes/HitRecord.html":{}}}],["record.ts:13",{"_index":283,"title":{},"body":{"classes/HitRecord.html":{}}}],["record.ts:14",{"_index":282,"title":{},"body":{"classes/HitRecord.html":{}}}],["record.ts:23",{"_index":288,"title":{},"body":{"classes/HitRecord.html":{}}}],["record.ts:27",{"_index":292,"title":{},"body":{"classes/HitRecord.html":{}}}],["record.ts:31",{"_index":296,"title":{},"body":{"classes/HitRecord.html":{}}}],["record.ts:35",{"_index":300,"title":{},"body":{"classes/HitRecord.html":{}}}],["record.ts:39",{"_index":290,"title":{},"body":{"classes/HitRecord.html":{}}}],["record.ts:43",{"_index":294,"title":{},"body":{"classes/HitRecord.html":{}}}],["record.ts:47",{"_index":298,"title":{},"body":{"classes/HitRecord.html":{}}}],["record.ts:51",{"_index":302,"title":{},"body":{"classes/HitRecord.html":{}}}],["reflect",{"_index":562,"title":{},"body":{"classes/Metal.html":{},"classes/Vidro.html":{}}}],["reflect(vectorv",{"_index":582,"title":{},"body":{"classes/Metal.html":{},"classes/Vidro.html":{}}}],["reflected",{"_index":700,"title":{},"body":{"classes/Vidro.html":{}}}],["refletida",{"_index":569,"title":{},"body":{"classes/Metal.html":{},"classes/Vidro.html":{}}}],["refletido",{"_index":585,"title":{},"body":{"classes/Metal.html":{},"classes/Vidro.html":{}}}],["reflexão",{"_index":574,"title":{},"body":{"classes/Metal.html":{},"classes/Vidro.html":{}}}],["refract",{"_index":675,"title":{},"body":{"classes/Vidro.html":{}}}],["refract(vectorv",{"_index":684,"title":{},"body":{"classes/Vidro.html":{}}}],["refracted",{"_index":686,"title":{},"body":{"classes/Vidro.html":{}}}],["refracted.x",{"_index":716,"title":{},"body":{"classes/Vidro.html":{}}}],["refracted.y",{"_index":718,"title":{},"body":{"classes/Vidro.html":{}}}],["refracted.z",{"_index":720,"title":{},"body":{"classes/Vidro.html":{}}}],["refractionratio",{"_index":699,"title":{},"body":{"classes/Vidro.html":{}}}],["refratado",{"_index":688,"title":{},"body":{"classes/Vidro.html":{}}}],["refrativo",{"_index":681,"title":{},"body":{"classes/Vidro.html":{}}}],["registro",{"_index":199,"title":{},"body":{"classes/Esfera.html":{}}}],["render",{"_index":391,"title":{},"body":{"components/LerObjComponent.html":{}}}],["renderer",{"_index":387,"title":{},"body":{"components/LerObjComponent.html":{}}}],["renderiza",{"_index":412,"title":{},"body":{"components/LerObjComponent.html":{}}}],["representa",{"_index":325,"title":{},"body":{"classes/HittableList.html":{},"classes/Imagem.html":{},"classes/Metal.html":{},"classes/Vidro.html":{}}}],["representar",{"_index":313,"title":{},"body":{"classes/Hittable.html":{},"classes/Material.html":{}}}],["representação",{"_index":589,"title":{},"body":{"classes/Metal.html":{},"classes/Vidro.html":{}}}],["reset",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["resolucao",{"_index":342,"title":{},"body":{"classes/Imagem.html":{}}}],["resolucaox",{"_index":96,"title":{},"body":{"components/CanvasBoxComponent.html":{},"classes/Imagem.html":{}}}],["resolucaoy",{"_index":97,"title":{},"body":{"components/CanvasBoxComponent.html":{},"classes/Imagem.html":{}}}],["results",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CanvasBoxComponent.html":{},"classes/Esfera.html":{},"classes/HitRecord.html":{},"classes/Hittable.html":{},"classes/HittableList.html":{},"classes/Imagem.html":{},"components/LerObjComponent.html":{},"classes/Material.html":{},"classes/Matrix2.html":{},"classes/Metal.html":{},"components/SalvarComponent.html":{},"classes/Vidro.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["retorna",{"_index":578,"title":{},"body":{"classes/Metal.html":{},"classes/Vidro.html":{}}}],["return",{"_index":251,"title":{},"body":{"classes/Esfera.html":{},"classes/HitRecord.html":{},"classes/Hittable.html":{},"classes/HittableList.html":{},"classes/Imagem.html":{},"classes/Material.html":{},"classes/Matrix2.html":{},"classes/Metal.html":{},"classes/Vidro.html":{}}}],["returns",{"_index":104,"title":{},"body":{"components/CanvasBoxComponent.html":{},"classes/Esfera.html":{},"classes/HitRecord.html":{},"classes/Hittable.html":{},"classes/HittableList.html":{},"classes/Imagem.html":{},"components/LerObjComponent.html":{},"classes/Material.html":{},"classes/Matrix2.html":{},"classes/Metal.html":{},"components/SalvarComponent.html":{},"classes/Vidro.html":{}}}],["root",{"_index":13,"title":{},"body":{"components/AppComponent.html":{}}}],["root'},{'name",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"components/CanvasBoxComponent.html":{},"components/LerObjComponent.html":{},"components/SalvarComponent.html":{}}}],["run",{"_index":795,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":764,"title":{},"body":{"dependencies.html":{}}}],["salva",{"_index":629,"title":{},"body":{"components/SalvarComponent.html":{}}}],["salvar",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"components/CanvasBoxComponent.html":{},"components/LerObjComponent.html":{},"components/SalvarComponent.html":{}}}],["salvar.component.css",{"_index":610,"title":{},"body":{"components/SalvarComponent.html":{}}}],["salvar.component.html",{"_index":609,"title":{},"body":{"components/SalvarComponent.html":{}}}],["salvar/salvar.component",{"_index":158,"title":{},"body":{"components/CanvasBoxComponent.html":{}}}],["salvarcomponent",{"_index":47,"title":{"components/SalvarComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CanvasBoxComponent.html":{},"components/LerObjComponent.html":{},"components/SalvarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["salvarimagemcanvas",{"_index":612,"title":{},"body":{"components/SalvarComponent.html":{}}}],["salvo",{"_index":616,"title":{},"body":{"components/SalvarComponent.html":{}}}],["samplesperpixel",{"_index":98,"title":{},"body":{"components/CanvasBoxComponent.html":{}}}],["scatter",{"_index":487,"title":{},"body":{"classes/Material.html":{},"classes/Metal.html":{},"classes/Vidro.html":{}}}],["scatter(ray",{"_index":488,"title":{},"body":{"classes/Material.html":{},"classes/Metal.html":{},"classes/Vidro.html":{}}}],["scattered",{"_index":490,"title":{},"body":{"classes/Material.html":{},"classes/Metal.html":{},"classes/Vidro.html":{}}}],["scattered.direction",{"_index":710,"title":{},"body":{"classes/Vidro.html":{}}}],["scattered.origin",{"_index":709,"title":{},"body":{"classes/Vidro.html":{}}}],["scene",{"_index":388,"title":{},"body":{"components/LerObjComponent.html":{}}}],["schlick",{"_index":676,"title":{},"body":{"classes/Vidro.html":{}}}],["schlick(cosseno",{"_index":690,"title":{},"body":{"classes/Vidro.html":{}}}],["schlik",{"_index":693,"title":{},"body":{"classes/Vidro.html":{}}}],["se",{"_index":214,"title":{},"body":{"classes/Esfera.html":{},"classes/HittableList.html":{}}}],["selector",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/CanvasBoxComponent.html":{},"components/LerObjComponent.html":{},"components/SalvarComponent.html":{}}}],["ser",{"_index":216,"title":{},"body":{"classes/Esfera.html":{},"classes/HitRecord.html":{},"classes/Hittable.html":{},"classes/HittableList.html":{},"classes/Imagem.html":{},"components/SalvarComponent.html":{}}}],["serve",{"_index":796,"title":{},"body":{"index.html":{}}}],["set",{"_index":306,"title":{},"body":{"classes/HitRecord.html":{}}}],["setmaterial(material",{"_index":301,"title":{},"body":{"classes/HitRecord.html":{}}}],["setnormal(normal",{"_index":297,"title":{},"body":{"classes/HitRecord.html":{}}}],["setp(p",{"_index":293,"title":{},"body":{"classes/HitRecord.html":{}}}],["sett(t",{"_index":289,"title":{},"body":{"classes/HitRecord.html":{}}}],["size",{"_index":322,"title":{},"body":{"classes/HittableList.html":{}}}],["somarescalar",{"_index":498,"title":{},"body":{"classes/Matrix2.html":{}}}],["somarescalar(m",{"_index":519,"title":{},"body":{"classes/Matrix2.html":{}}}],["somarmatrizes",{"_index":499,"title":{},"body":{"classes/Matrix2.html":{}}}],["somarmatrizes(m1",{"_index":522,"title":{},"body":{"classes/Matrix2.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CanvasBoxComponent.html":{},"classes/Esfera.html":{},"classes/HitRecord.html":{},"classes/Hittable.html":{},"classes/HittableList.html":{},"classes/Imagem.html":{},"components/LerObjComponent.html":{},"classes/Material.html":{},"classes/Matrix2.html":{},"classes/Metal.html":{},"components/SalvarComponent.html":{},"classes/Vidro.html":{}}}],["src/app/app.component.ts",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:9",{"_index":28,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/classes/esfera.ts",{"_index":172,"title":{},"body":{"classes/Esfera.html":{},"coverage.html":{}}}],["src/app/classes/esfera.ts:10",{"_index":187,"title":{},"body":{"classes/Esfera.html":{}}}],["src/app/classes/esfera.ts:11",{"_index":184,"title":{},"body":{"classes/Esfera.html":{}}}],["src/app/classes/esfera.ts:55",{"_index":191,"title":{},"body":{"classes/Esfera.html":{}}}],["src/app/classes/esfera.ts:8",{"_index":186,"title":{},"body":{"classes/Esfera.html":{}}}],["src/app/classes/esfera.ts:9",{"_index":188,"title":{},"body":{"classes/Esfera.html":{}}}],["src/app/classes/hit",{"_index":263,"title":{},"body":{"classes/HitRecord.html":{},"coverage.html":{}}}],["src/app/classes/hittable",{"_index":315,"title":{},"body":{"classes/HittableList.html":{},"coverage.html":{}}}],["src/app/classes/hittable.ts",{"_index":311,"title":{},"body":{"classes/Hittable.html":{},"coverage.html":{}}}],["src/app/classes/hittable.ts:8",{"_index":314,"title":{},"body":{"classes/Hittable.html":{}}}],["src/app/classes/imagem.ts",{"_index":335,"title":{},"body":{"classes/Imagem.html":{},"coverage.html":{}}}],["src/app/classes/imagem.ts:23",{"_index":358,"title":{},"body":{"classes/Imagem.html":{}}}],["src/app/classes/imagem.ts:27",{"_index":361,"title":{},"body":{"classes/Imagem.html":{}}}],["src/app/classes/imagem.ts:34",{"_index":363,"title":{},"body":{"classes/Imagem.html":{}}}],["src/app/classes/imagem.ts:4",{"_index":345,"title":{},"body":{"classes/Imagem.html":{}}}],["src/app/classes/imagem.ts:41",{"_index":368,"title":{},"body":{"classes/Imagem.html":{}}}],["src/app/classes/imagem.ts:49",{"_index":349,"title":{},"body":{"classes/Imagem.html":{}}}],["src/app/classes/imagem.ts:5",{"_index":346,"title":{},"body":{"classes/Imagem.html":{}}}],["src/app/classes/imagem.ts:6",{"_index":347,"title":{},"body":{"classes/Imagem.html":{}}}],["src/app/classes/imagem.ts:7",{"_index":344,"title":{},"body":{"classes/Imagem.html":{}}}],["src/app/classes/manipulacao",{"_index":741,"title":{},"body":{"coverage.html":{}}}],["src/app/classes/material/material.ts",{"_index":484,"title":{},"body":{"classes/Material.html":{},"coverage.html":{}}}],["src/app/classes/material/material.ts:9",{"_index":491,"title":{},"body":{"classes/Material.html":{}}}],["src/app/classes/material/metal.ts",{"_index":558,"title":{},"body":{"classes/Metal.html":{},"coverage.html":{}}}],["src/app/classes/material/metal.ts:51",{"_index":584,"title":{},"body":{"classes/Metal.html":{}}}],["src/app/classes/material/metal.ts:59",{"_index":577,"title":{},"body":{"classes/Metal.html":{}}}],["src/app/classes/material/metal.ts:7",{"_index":575,"title":{},"body":{"classes/Metal.html":{}}}],["src/app/classes/material/metal.ts:8",{"_index":576,"title":{},"body":{"classes/Metal.html":{}}}],["src/app/classes/material/metal.ts:9",{"_index":565,"title":{},"body":{"classes/Metal.html":{}}}],["src/app/classes/material/vidro.ts",{"_index":673,"title":{},"body":{"classes/Vidro.html":{},"coverage.html":{}}}],["src/app/classes/material/vidro.ts:105",{"_index":691,"title":{},"body":{"classes/Vidro.html":{}}}],["src/app/classes/material/vidro.ts:68",{"_index":683,"title":{},"body":{"classes/Vidro.html":{}}}],["src/app/classes/material/vidro.ts:8",{"_index":682,"title":{},"body":{"classes/Vidro.html":{}}}],["src/app/classes/material/vidro.ts:81",{"_index":687,"title":{},"body":{"classes/Vidro.html":{}}}],["src/app/classes/material/vidro.ts:9",{"_index":678,"title":{},"body":{"classes/Vidro.html":{}}}],["src/app/classes/matrix2.ts",{"_index":493,"title":{},"body":{"classes/Matrix2.html":{},"coverage.html":{}}}],["src/app/classes/matrix2.ts:15",{"_index":523,"title":{},"body":{"classes/Matrix2.html":{}}}],["src/app/classes/matrix2.ts:2",{"_index":506,"title":{},"body":{"classes/Matrix2.html":{}}}],["src/app/classes/matrix2.ts:24",{"_index":525,"title":{},"body":{"classes/Matrix2.html":{}}}],["src/app/classes/matrix2.ts:33",{"_index":518,"title":{},"body":{"classes/Matrix2.html":{}}}],["src/app/classes/matrix2.ts:42",{"_index":520,"title":{},"body":{"classes/Matrix2.html":{}}}],["src/app/classes/matrix2.ts:51",{"_index":509,"title":{},"body":{"classes/Matrix2.html":{}}}],["src/app/classes/matrix2.ts:55",{"_index":511,"title":{},"body":{"classes/Matrix2.html":{}}}],["src/app/classes/matrix2.ts:65",{"_index":527,"title":{},"body":{"classes/Matrix2.html":{}}}],["src/app/classes/matrix2.ts:74",{"_index":515,"title":{},"body":{"classes/Matrix2.html":{}}}],["src/app/components/canvas",{"_index":81,"title":{},"body":{"components/CanvasBoxComponent.html":{},"coverage.html":{}}}],["src/app/components/ler",{"_index":378,"title":{},"body":{"components/LerObjComponent.html":{},"coverage.html":{}}}],["src/app/components/salvar/salvar.component.ts",{"_index":608,"title":{},"body":{"components/SalvarComponent.html":{},"coverage.html":{}}}],["src/app/components/salvar/salvar.component.ts:15",{"_index":614,"title":{},"body":{"components/SalvarComponent.html":{}}}],["src/app/components/salvar/salvar.component.ts:20",{"_index":627,"title":{},"body":{"components/SalvarComponent.html":{}}}],["src/app/components/salvar/salvar.component.ts:35",{"_index":619,"title":{},"body":{"components/SalvarComponent.html":{}}}],["start",{"_index":789,"title":{},"body":{"index.html":{}}}],["started",{"_index":774,"title":{"index.html":{}},"body":{}}],["statements",{"_index":728,"title":{},"body":{"coverage.html":{}}}],["stream",{"_index":644,"title":{},"body":{"components/SalvarComponent.html":{}}}],["string",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"components/LerObjComponent.html":{},"components/SalvarComponent.html":{}}}],["styleurl",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"components/CanvasBoxComponent.html":{},"components/LerObjComponent.html":{},"components/SalvarComponent.html":{}}}],["subtrairmatrizes",{"_index":500,"title":{},"body":{"classes/Matrix2.html":{}}}],["subtrairmatrizes(m1",{"_index":524,"title":{},"body":{"classes/Matrix2.html":{}}}],["super",{"_index":232,"title":{},"body":{"classes/Esfera.html":{},"classes/HittableList.html":{},"classes/Metal.html":{},"classes/Vidro.html":{}}}],["support",{"_index":800,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":801,"title":{},"body":{"modules.html":{}}}],["t",{"_index":279,"title":{},"body":{"classes/HitRecord.html":{}}}],["t(t",{"_index":307,"title":{},"body":{"classes/HitRecord.html":{}}}],["table",{"_index":750,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":749,"title":{},"body":{"coverage.html":{}}}],["tamanho",{"_index":364,"title":{},"body":{"classes/Imagem.html":{}}}],["temp",{"_index":248,"title":{},"body":{"classes/Esfera.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/CanvasBoxComponent.html":{},"components/LerObjComponent.html":{},"components/SalvarComponent.html":{}}}],["templateurl",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"components/CanvasBoxComponent.html":{},"components/LerObjComponent.html":{},"components/SalvarComponent.html":{}}}],["textura",{"_index":401,"title":{},"body":{"components/LerObjComponent.html":{}}}],["textureloader",{"_index":389,"title":{},"body":{"components/LerObjComponent.html":{}}}],["textureurl",{"_index":394,"title":{},"body":{"components/LerObjComponent.html":{}}}],["this._albedo",{"_index":594,"title":{},"body":{"classes/Metal.html":{}}}],["this._center",{"_index":233,"title":{},"body":{"classes/Esfera.html":{}}}],["this._fuzz",{"_index":596,"title":{},"body":{"classes/Metal.html":{}}}],["this._indicerefrativo",{"_index":697,"title":{},"body":{"classes/Vidro.html":{}}}],["this._list",{"_index":330,"title":{},"body":{"classes/HittableList.html":{}}}],["this._list.length",{"_index":331,"title":{},"body":{"classes/HittableList.html":{}}}],["this._material",{"_index":235,"title":{},"body":{"classes/Esfera.html":{},"classes/HitRecord.html":{}}}],["this._normal",{"_index":305,"title":{},"body":{"classes/HitRecord.html":{}}}],["this._p",{"_index":304,"title":{},"body":{"classes/HitRecord.html":{}}}],["this._pixelmatriz",{"_index":373,"title":{},"body":{"classes/Imagem.html":{}}}],["this._radius",{"_index":234,"title":{},"body":{"classes/Esfera.html":{}}}],["this._resolucao",{"_index":372,"title":{},"body":{"classes/Imagem.html":{}}}],["this._resolucaox",{"_index":370,"title":{},"body":{"classes/Imagem.html":{}}}],["this._resolucaoy",{"_index":371,"title":{},"body":{"classes/Imagem.html":{}}}],["this._t",{"_index":303,"title":{},"body":{"classes/HitRecord.html":{}}}],["this.assignhitrecord(temp",{"_index":252,"title":{},"body":{"classes/Esfera.html":{}}}],["this.camera",{"_index":483,"title":{},"body":{"components/LerObjComponent.html":{}}}],["this.camera.position.set(0",{"_index":441,"title":{},"body":{"components/LerObjComponent.html":{}}}],["this.canvasid",{"_index":646,"title":{},"body":{"components/SalvarComponent.html":{}}}],["this.controls.addeventlistener('change",{"_index":455,"title":{},"body":{"components/LerObjComponent.html":{}}}],["this.controls.maxdistance",{"_index":454,"title":{},"body":{"components/LerObjComponent.html":{}}}],["this.controls.mindistance",{"_index":452,"title":{},"body":{"components/LerObjComponent.html":{}}}],["this.controls.update",{"_index":474,"title":{},"body":{"components/LerObjComponent.html":{}}}],["this.light.position.set(2.5",{"_index":437,"title":{},"body":{"components/LerObjComponent.html":{}}}],["this.listhittable.push(new",{"_index":161,"title":{},"body":{"components/CanvasBoxComponent.html":{}}}],["this.loadobj",{"_index":457,"title":{},"body":{"components/LerObjComponent.html":{}}}],["this.manipula.calcularprodutoescalarvec3(origincenter",{"_index":243,"title":{},"body":{"classes/Esfera.html":{}}}],["this.manipula.calcularprodutoescalarvec3(ray.direction",{"_index":240,"title":{},"body":{"classes/Esfera.html":{},"classes/Vidro.html":{}}}],["this.manipula.calcularprodutoescalarvec3(vectorv",{"_index":598,"title":{},"body":{"classes/Metal.html":{}}}],["this.manipula.criarvector3",{"_index":118,"title":{},"body":{"components/CanvasBoxComponent.html":{}}}],["this.manipula.criarvector3(0",{"_index":115,"title":{},"body":{"components/CanvasBoxComponent.html":{},"classes/HitRecord.html":{},"classes/Vidro.html":{}}}],["this.manipula.criarvector3(1",{"_index":606,"title":{},"body":{"classes/Metal.html":{}}}],["this.manipula.criarvector3(4",{"_index":122,"title":{},"body":{"components/CanvasBoxComponent.html":{}}}],["this.manipula.criarvector3(math.random",{"_index":603,"title":{},"body":{"classes/Metal.html":{}}}],["this.manipula.multiplicarescalarvec3",{"_index":713,"title":{},"body":{"classes/Vidro.html":{}}}],["this.manipula.multiplicarescalarvec3(hitrecord.normal",{"_index":705,"title":{},"body":{"classes/Vidro.html":{}}}],["this.manipula.multiplicarescalarvec3(ray.direction",{"_index":257,"title":{},"body":{"classes/Esfera.html":{}}}],["this.manipula.multiplicarescalarvec3(this.manipula.subtrairvetoresvec3(hitrecord.p",{"_index":259,"title":{},"body":{"classes/Esfera.html":{}}}],["this.manipula.multiplicarescalarvec3(vectorn",{"_index":715,"title":{},"body":{"classes/Vidro.html":{}}}],["this.manipula.multiplicarescalarvec3(vectorn,2",{"_index":600,"title":{},"body":{"classes/Metal.html":{}}}],["this.manipula.somarvetoresvec3(ray.origin",{"_index":256,"title":{},"body":{"classes/Esfera.html":{}}}],["this.manipula.subtrairvetoresvec3",{"_index":712,"title":{},"body":{"classes/Vidro.html":{}}}],["this.manipula.subtrairvetoresvec3(this.manipula.criarvector3(0",{"_index":239,"title":{},"body":{"classes/Esfera.html":{}}}],["this.manipula.subtrairvetoresvec3(this.manipula.multiplicarescalarvec3(vectortemp",{"_index":605,"title":{},"body":{"classes/Metal.html":{}}}],["this.manipula.subtrairvetoresvec3(vectoruv",{"_index":714,"title":{},"body":{"classes/Vidro.html":{}}}],["this.manipula.subtrairvetoresvec3(vectorv",{"_index":599,"title":{},"body":{"classes/Metal.html":{}}}],["this.matrix2",{"_index":528,"title":{},"body":{"classes/Matrix2.html":{}}}],["this.matrix2[0",{"_index":529,"title":{},"body":{"classes/Matrix2.html":{}}}],["this.matrix2[0][0",{"_index":531,"title":{},"body":{"classes/Matrix2.html":{}}}],["this.matrix2[0][1",{"_index":532,"title":{},"body":{"classes/Matrix2.html":{}}}],["this.matrix2[1",{"_index":530,"title":{},"body":{"classes/Matrix2.html":{}}}],["this.matrix2[1][0",{"_index":533,"title":{},"body":{"classes/Matrix2.html":{}}}],["this.matrix2[1][1",{"_index":534,"title":{},"body":{"classes/Matrix2.html":{}}}],["this.objloader.load(this.objurl",{"_index":459,"title":{},"body":{"components/LerObjComponent.html":{}}}],["this.reflect(ray.direction",{"_index":701,"title":{},"body":{"classes/Vidro.html":{}}}],["this.refract(ray.direction",{"_index":707,"title":{},"body":{"classes/Vidro.html":{}}}],["this.render",{"_index":458,"title":{},"body":{"components/LerObjComponent.html":{}}}],["this.render.bind(this",{"_index":456,"title":{},"body":{"components/LerObjComponent.html":{}}}],["this.renderer.clearcolor",{"_index":446,"title":{},"body":{"components/LerObjComponent.html":{}}}],["this.renderer.domelement",{"_index":419,"title":{},"body":{"components/LerObjComponent.html":{}}}],["this.renderer.render(this.scene",{"_index":482,"title":{},"body":{"components/LerObjComponent.html":{}}}],["this.renderer.setsize(window.innerwidth",{"_index":444,"title":{},"body":{"components/LerObjComponent.html":{}}}],["this.resolucaoy",{"_index":127,"title":{},"body":{"components/CanvasBoxComponent.html":{}}}],["this.scene.add(ambientlight",{"_index":451,"title":{},"body":{"components/LerObjComponent.html":{}}}],["this.scene.add(object",{"_index":473,"title":{},"body":{"components/LerObjComponent.html":{}}}],["this.scene.add(this.light",{"_index":440,"title":{},"body":{"components/LerObjComponent.html":{}}}],["this.schlick(cosseno",{"_index":708,"title":{},"body":{"classes/Vidro.html":{}}}],["this.textureloader.load(this.textureurl",{"_index":462,"title":{},"body":{"components/LerObjComponent.html":{}}}],["this.world",{"_index":169,"title":{},"body":{"components/CanvasBoxComponent.html":{}}}],["three",{"_index":142,"title":{},"body":{"components/CanvasBoxComponent.html":{},"classes/Esfera.html":{},"classes/HitRecord.html":{},"classes/Hittable.html":{},"classes/HittableList.html":{},"classes/Imagem.html":{},"components/LerObjComponent.html":{},"classes/Material.html":{},"classes/Metal.html":{},"components/SalvarComponent.html":{},"classes/Vidro.html":{},"dependencies.html":{}}}],["three/examples/jsm/controls/orbitcontrols",{"_index":435,"title":{},"body":{"components/LerObjComponent.html":{}}}],["three/examples/jsm/loaders/objloader",{"_index":436,"title":{},"body":{"components/LerObjComponent.html":{}}}],["throw",{"_index":654,"title":{},"body":{"components/SalvarComponent.html":{}}}],["title",{"_index":20,"title":{},"body":{"components/AppComponent.html":{}}}],["transpor",{"_index":501,"title":{},"body":{"classes/Matrix2.html":{}}}],["transpor(m1",{"_index":526,"title":{},"body":{"classes/Matrix2.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/CanvasBoxComponent.html":{},"components/LerObjComponent.html":{},"components/SalvarComponent.html":{}}}],["true",{"_index":262,"title":{},"body":{"classes/Esfera.html":{},"classes/Hittable.html":{},"classes/Material.html":{},"classes/Vidro.html":{}}}],["tslib",{"_index":767,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"components/CanvasBoxComponent.html":{},"classes/Esfera.html":{},"classes/HitRecord.html":{},"classes/Hittable.html":{},"classes/HittableList.html":{},"classes/Imagem.html":{},"components/LerObjComponent.html":{},"classes/Material.html":{},"classes/Matrix2.html":{},"classes/Metal.html":{},"components/SalvarComponent.html":{},"classes/Vidro.html":{},"coverage.html":{}}}],["types/three",{"_index":759,"title":{},"body":{"dependencies.html":{}}}],["um",{"_index":274,"title":{},"body":{"classes/HitRecord.html":{},"classes/Hittable.html":{},"components/LerObjComponent.html":{},"classes/Metal.html":{},"components/SalvarComponent.html":{},"classes/Vidro.html":{}}}],["uma",{"_index":318,"title":{},"body":{"classes/HittableList.html":{},"classes/Imagem.html":{},"classes/Metal.html":{},"components/SalvarComponent.html":{}}}],["undefined",{"_index":160,"title":{},"body":{"components/CanvasBoxComponent.html":{}}}],["url",{"_index":792,"title":{},"body":{"index.html":{}}}],["use",{"_index":786,"title":{},"body":{"index.html":{}}}],["uso",{"_index":628,"title":{},"body":{"components/SalvarComponent.html":{}}}],["util",{"_index":769,"title":{},"body":{"dependencies.html":{}}}],["v",{"_index":662,"title":{},"body":{"components/SalvarComponent.html":{}}}],["valor",{"_index":201,"title":{},"body":{"classes/Esfera.html":{}}}],["valores",{"_index":404,"title":{},"body":{"components/LerObjComponent.html":{}}}],["value",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"components/CanvasBoxComponent.html":{},"classes/Esfera.html":{},"classes/HitRecord.html":{},"components/LerObjComponent.html":{},"classes/Metal.html":{},"components/SalvarComponent.html":{},"classes/Vidro.html":{}}}],["var",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/CanvasBoxComponent.html":{},"components/LerObjComponent.html":{},"components/SalvarComponent.html":{}}}],["vector",{"_index":601,"title":{},"body":{"classes/Metal.html":{}}}],["vector.length",{"_index":607,"title":{},"body":{"classes/Metal.html":{}}}],["vector3",{"_index":114,"title":{},"body":{"components/CanvasBoxComponent.html":{},"classes/Esfera.html":{},"classes/HitRecord.html":{},"classes/Imagem.html":{},"classes/Material.html":{},"classes/Metal.html":{},"components/SalvarComponent.html":{},"classes/Vidro.html":{}}}],["vectorcenter",{"_index":185,"title":{},"body":{"classes/Esfera.html":{}}}],["vectorn",{"_index":583,"title":{},"body":{"classes/Metal.html":{},"classes/Vidro.html":{}}}],["vectortemp",{"_index":602,"title":{},"body":{"classes/Metal.html":{},"classes/Vidro.html":{}}}],["vectortemp.x",{"_index":717,"title":{},"body":{"classes/Vidro.html":{}}}],["vectortemp.y",{"_index":719,"title":{},"body":{"classes/Vidro.html":{}}}],["vectortemp.z",{"_index":721,"title":{},"body":{"classes/Vidro.html":{}}}],["vectorv",{"_index":586,"title":{},"body":{"classes/Metal.html":{},"classes/Vidro.html":{}}}],["version",{"_index":805,"title":{},"body":{"properties.html":{}}}],["versão",{"_index":783,"title":{},"body":{"index.html":{}}}],["vet",{"_index":144,"title":{},"body":{"components/CanvasBoxComponent.html":{},"classes/Esfera.html":{},"classes/HitRecord.html":{},"classes/Metal.html":{},"classes/Vidro.html":{},"coverage.html":{}}}],["vetor",{"_index":579,"title":{},"body":{"classes/Metal.html":{},"classes/Vidro.html":{}}}],["vidro",{"_index":153,"title":{"classes/Vidro.html":{}},"body":{"components/CanvasBoxComponent.html":{},"classes/Vidro.html":{},"coverage.html":{}}}],["vidro(1.5",{"_index":168,"title":{},"body":{"components/CanvasBoxComponent.html":{}}}],["visualizar",{"_index":798,"title":{},"body":{"index.html":{}}}],["void",{"_index":105,"title":{},"body":{"components/CanvasBoxComponent.html":{},"classes/HitRecord.html":{},"classes/Imagem.html":{},"components/LerObjComponent.html":{},"components/SalvarComponent.html":{}}}],["webglrenderer",{"_index":424,"title":{},"body":{"components/LerObjComponent.html":{}}}],["window.innerheight",{"_index":445,"title":{},"body":{"components/LerObjComponent.html":{}}}],["window.innerwidth/window.innerheight",{"_index":414,"title":{},"body":{"components/LerObjComponent.html":{}}}],["world",{"_index":99,"title":{},"body":{"components/CanvasBoxComponent.html":{}}}],["x",{"_index":366,"title":{},"body":{"classes/Imagem.html":{},"components/SalvarComponent.html":{}}}],["xhr",{"_index":475,"title":{},"body":{"components/LerObjComponent.html":{}}}],["xhr.total",{"_index":477,"title":{},"body":{"components/LerObjComponent.html":{}}}],["y",{"_index":369,"title":{},"body":{"classes/Imagem.html":{},"components/SalvarComponent.html":{}}}],["yes",{"_index":508,"title":{},"body":{"classes/Matrix2.html":{}}}],["zone.js",{"_index":771,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n            \n                styleUrl\n                ./app.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Atividade06'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.css'\n})\nexport class AppComponent {\n  title = 'Atividade06';\n}\n\n    \n\n    \n        \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CanvasBoxComponent', 'selector': 'app-canvas-box'},{'name': 'LerObjComponent', 'selector': 'ler-obj'},{'name': 'SalvarComponent', 'selector': 'app-salvar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCanvasBoxComponent\n\nCanvasBoxComponent\n\nAppModule -->\n\nCanvasBoxComponent->AppModule\n\n\n\n\n\nLerObjComponent\n\nLerObjComponent\n\nAppModule -->\n\nLerObjComponent->AppModule\n\n\n\n\n\nSalvarComponent\n\nSalvarComponent\n\nAppModule -->\n\nSalvarComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            CanvasBoxComponent\n                        \n                        \n                            LerObjComponent\n                        \n                        \n                            SalvarComponent\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CanvasBoxComponent } from './components/canvas-box/canvas-box.component';\nimport { AppComponent } from './app.component';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { SalvarComponent } from './components/salvar/salvar.component';\nimport { LerObjComponent } from './components/ler-obj/ler-obj.component';\n\n@NgModule({\n  imports: [\n    BrowserModule\n  ],\n  declarations: [\n    AppComponent,\n    CanvasBoxComponent,\n    SalvarComponent,\n    LerObjComponent\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CanvasBoxComponent.html":{"url":"components/CanvasBoxComponent.html","title":"component - CanvasBoxComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CanvasBoxComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/canvas-box/canvas-box.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-canvas-box\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./canvas-box.component.html\n            \n\n\n\n            \n                styleUrl\n                ./canvas-box.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cameraCenter\n                            \n                            \n                                cameraCornerLowerleft\n                            \n                            \n                                cameraHorizontal\n                            \n                            \n                                cameraVertical\n                            \n                            \n                                imagem\n                            \n                            \n                                listHittable\n                            \n                            \n                                    Private\n                                manipula\n                            \n                            \n                                resolucaoX\n                            \n                            \n                                resolucaoY\n                            \n                            \n                                salvar\n                            \n                            \n                                samplesPerPixel\n                            \n                            \n                                world\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                rayColor\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/canvas-box/canvas-box.component.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rayColor\n                        \n                    \n                \n            \n            \n                \nrayColor(ray: Ray, world: HittableList, maxDepth: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/canvas-box/canvas-box.component.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ray\n                                            \n                                                        Ray\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                world\n                                            \n                                                            HittableList\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                maxDepth\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Vector3\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cameraCenter\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.manipula.criarVector3(0, 0, 0)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/canvas-box/canvas-box.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cameraCornerLowerleft\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.manipula.criarVector3(-2, -1, -1)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/canvas-box/canvas-box.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cameraHorizontal\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.manipula.criarVector3(4, 0, 0)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/canvas-box/canvas-box.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cameraVertical\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.manipula.criarVector3(0, 2, 0)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/canvas-box/canvas-box.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        imagem\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Imagem(this.resolucaoX, this.resolucaoY)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/canvas-box/canvas-box.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        listHittable\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Array()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/canvas-box/canvas-box.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        manipula\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new ManipulacaoVetMat()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/canvas-box/canvas-box.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resolucaoX\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 400\n                    \n                \n                    \n                        \n                                Defined in src/app/components/canvas-box/canvas-box.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resolucaoY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 200\n                    \n                \n                    \n                        \n                                Defined in src/app/components/canvas-box/canvas-box.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        salvar\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new SalvarComponent()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/canvas-box/canvas-box.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        samplesPerPixel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 50\n                    \n                \n                    \n                        \n                                Defined in src/app/components/canvas-box/canvas-box.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        world\n                        \n                    \n                \n            \n                \n                    \n                        Type :         HittableList\n\n                    \n                \n                \n                    \n                        Default value : new HittableList(this.listHittable)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/canvas-box/canvas-box.component.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Ray, Vector3 } from 'three';\nimport { ManipulacaoVetMat } from '../../classes/manipulacao-vet-mat';\nimport { Imagem } from '../../classes/imagem';\nimport { HittableList } from '../../classes/hittable-list';\nimport { Esfera } from '../../classes/esfera';\nimport { Metal } from '../../classes/Material/metal';\nimport { Vidro } from '../../classes/Material/vidro';\nimport { HitRecord } from '../../classes/hit-record';\nimport { SalvarComponent } from '../salvar/salvar.component';\n\n@Component({\n  selector: 'app-canvas-box',\n  templateUrl: './canvas-box.component.html',\n  styleUrl: './canvas-box.component.css'\n})\nexport class CanvasBoxComponent implements OnInit {\n  private manipula  = new ManipulacaoVetMat();\n\n  resolucaoX = 400;\n  resolucaoY = 200;\n  samplesPerPixel = 50;\n  imagem = new Imagem(this.resolucaoX, this.resolucaoY);\n  salvar = new SalvarComponent();\n\n  listHittable = new Array();\n  world: HittableList = new HittableList(this.listHittable);\n  cameraHorizontal = this.manipula.criarVector3(4, 0, 0);\n  cameraVertical = this.manipula.criarVector3(0, 2, 0);\n  cameraCornerLowerleft = this.manipula.criarVector3(-2, -1, -1);\n  cameraCenter = this.manipula.criarVector3(0, 0, 0);\n\n  ngOnInit(): void {\n    if(this.listHittable != undefined) {\n      this.listHittable.push(new Esfera(this.manipula.criarVector3(1, 0, -1), 0.5, new Metal(this.manipula.criarVector3(0.8, 0.6, 0.2), 0)))\n      this.listHittable.push(new Esfera(this.manipula.criarVector3(-1, 0, -1), 0.5, new Vidro(1.5)));\n      this.world = new HittableList(this.listHittable);\n      for (let j = this.resolucaoY - 1; j >= 0; j--) {\n        for (let i = 0; i \n    \n\n    \n        \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CanvasBoxComponent', 'selector': 'app-canvas-box'},{'name': 'LerObjComponent', 'selector': 'ler-obj'},{'name': 'SalvarComponent', 'selector': 'app-salvar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CanvasBoxComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Esfera.html":{"url":"classes/Esfera.html","title":"class - Esfera","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Esfera\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/classes/esfera.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            Hittable\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _center\n                            \n                            \n                                _material\n                            \n                            \n                                _radius\n                            \n                            \n                                    Private\n                                manipula\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                assignHitRecord\n                            \n                            \n                                    \n                                hit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(vectorCenter: Vector3, radius: number, material: Material)\n                    \n                \n                        \n                            \n                                Defined in src/app/classes/esfera.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        vectorCenter\n                                                  \n                                                        \n                                                                    Vector3\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        radius\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        material\n                                                  \n                                                        \n                                                                        Material\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _center\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Vector3\n\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/esfera.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _material\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Material\n\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/esfera.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _radius\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/esfera.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        manipula\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new ManipulacaoVetMat()\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/esfera.ts:11\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        assignHitRecord\n                        \n                    \n                \n            \n            \n                \nassignHitRecord(valor: number, center: Vector3, radius: number, material: Material, ray: Ray, hitRecord: HitRecord)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/esfera.ts:55\n                        \n                    \n\n\n            \n                \n                        Função que adiciona o incidência do raio ao registro\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                valor\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                            \n                                        \n                                        \n                                                center\n                                            \n                                                        Vector3\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \ncentro da esfera\n\n\n                                            \n                                        \n                                        \n                                                radius\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nraio da esfera\n\n\n                                            \n                                        \n                                        \n                                                material\n                                            \n                                                            Material\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nmaterial da esfera\n\n\n                                            \n                                        \n                                        \n                                                ray\n                                            \n                                                        Ray\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nraio de luz.\n\n\n                                            \n                                        \n                                        \n                                                hitRecord\n                                            \n                                                            HitRecord\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nregistro de incidências\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        hit\n                        \n                    \n                \n            \n            \n                \n                        \n                    hit(ray: Ray, rayTmin: number, rayTmax: number, hitRecord: HitRecord)\n                \n            \n\n\n                    \n                        \n                            Inherited from         Hittable\n\n                        \n                    \n                    \n                        \n                                Defined in         Hittable:27\n\n                        \n                    \n\n\n            \n                \n                        Calcula se o objeto será atingido pelo raio especificado\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                ray\n                                            \n                                                        Ray\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nraio de luz.\n\n\n                                            \n                                        \n                                        \n                                                rayTmin\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \ninício do intervalo de onde o raio pode atingir.\n\n\n                                            \n                                        \n                                        \n                                                rayTmax\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nfinal do intervalo de onde o raio pode atingir.\n\n\n                                            \n                                        \n                                        \n                                                hitRecord\n                                            \n                                                            HitRecord\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \narmazenamento dos locais atingidos.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Hittable } from './hittable';\nimport { Ray, Vector3 } from 'three';\nimport { Material } from './Material/material';\nimport { HitRecord } from './hit-record';\nimport { ManipulacaoVetMat } from './manipulacao-vet-mat';\n\nexport class Esfera extends Hittable {\n  _center: Vector3;\n  _radius: number;\n  _material: Material;\n  private manipula = new ManipulacaoVetMat();\n\n  constructor(vectorCenter: Vector3, radius: number, material: Material) {\n    super();\n    this._center = vectorCenter;\n    this._radius = radius;\n    this._material = material;\n  }\n\n  /**\n   * Calcula se o objeto será atingido pelo raio especificado\n   * @param {Ray} ray - raio de luz.\n   * @param {number} rayTmin - início do intervalo de onde o raio pode atingir.\n   * @param {number} rayTmax - final do intervalo de onde o raio pode atingir.\n   * @param {HitRecord} hitRecord - armazenamento dos locais atingidos.\n   */\n  override hit(ray: Ray, rayTmin: number, rayTmax: number, hitRecord: HitRecord): boolean {\n    let originCenter = this.manipula.subtrairVetoresVec3(this.manipula.criarVector3(0, 0, 0), this._center);\n    let a = this.manipula.calcularProdutoEscalarVec3(ray.direction, ray.direction);\n    let b = this.manipula.calcularProdutoEscalarVec3(originCenter, ray.direction);\n    let c = this.manipula.calcularProdutoEscalarVec3(originCenter, originCenter) - (this._radius * this._radius);\n    let discriminante = (b*b) - (a*c);\n    if (discriminante > 0) {\n      let temp = ((-1 * b) - Math.sqrt(discriminante)) / a;\n      if(temp  rayTmin) {\n        return this.assignHitRecord(temp, this._center, this._radius, this._material, ray, hitRecord);\n      }\n      temp = ((-1 * b) + Math.sqrt(discriminante)) / a;\n      if(temp  rayTmin) {\n        return this.assignHitRecord(temp, this._center, this._radius, this._material, ray, hitRecord);\n      }\n    }\n      return false;\n  }\n\n  /**\n   * Função que adiciona o incidência do raio ao registro\n   * @param {number} valor\n   * @param {Vector3} center - centro da esfera\n   * @param {number} radius - raio da esfera\n   * @param {Material} material - material da esfera\n   * @param {Ray} ray - raio de luz.\n   * @param {HitRecord} hitRecord - registro de incidências\n   */\n  assignHitRecord(valor: number, center: Vector3, radius: number, material: Material, ray: Ray, hitRecord: HitRecord) {\n    hitRecord.t = valor;\n    hitRecord.p = this.manipula.somarVetoresVec3(ray.origin, this.manipula.multiplicarEscalarVec3(ray.direction, hitRecord.t));\n    hitRecord.normal = this.manipula.multiplicarEscalarVec3(this.manipula.subtrairVetoresVec3(hitRecord.p, center), 1/radius);\n    hitRecord.material = material;\n    return true;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HitRecord.html":{"url":"classes/HitRecord.html","title":"class - HitRecord","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HitRecord\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/classes/hit-record.ts\n        \n\n\n            \n                Description\n            \n            \n                Estrutura genérica para guardar qualquer coisa que possa ser atingida por um raio.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _material\n                            \n                            \n                                _normal\n                            \n                            \n                                _p\n                            \n                            \n                                _t\n                            \n                            \n                                manipula\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    t\n                                \n                                \n                                    p\n                                \n                                \n                                    normal\n                                \n                                \n                                    material\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/classes/hit-record.ts:14\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _material\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Material\n\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/hit-record.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _normal\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Vector3\n\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/hit-record.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _p\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Vector3\n\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/hit-record.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _t\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/hit-record.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        manipula\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new ManipulacaoVetMat()\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/hit-record.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        t\n                    \n                \n\n                \n                    \n                        gett()\n                    \n                \n                            \n                                \n                                    Defined in src/app/classes/hit-record.ts:23\n                                \n                            \n\n                \n                    \n                        sett(t)\n                    \n                \n                            \n                                \n                                    Defined in src/app/classes/hit-record.ts:39\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            t\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        p\n                    \n                \n\n                \n                    \n                        getp()\n                    \n                \n                            \n                                \n                                    Defined in src/app/classes/hit-record.ts:27\n                                \n                            \n\n                \n                    \n                        setp(p)\n                    \n                \n                            \n                                \n                                    Defined in src/app/classes/hit-record.ts:43\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            p\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        normal\n                    \n                \n\n                \n                    \n                        getnormal()\n                    \n                \n                            \n                                \n                                    Defined in src/app/classes/hit-record.ts:31\n                                \n                            \n\n                \n                    \n                        setnormal(normal)\n                    \n                \n                            \n                                \n                                    Defined in src/app/classes/hit-record.ts:47\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            normal\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        material\n                    \n                \n\n                \n                    \n                        getmaterial()\n                    \n                \n                            \n                                \n                                    Defined in src/app/classes/hit-record.ts:35\n                                \n                            \n\n                \n                    \n                        setmaterial(material)\n                    \n                \n                            \n                                \n                                    Defined in src/app/classes/hit-record.ts:51\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            material\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Vector3 } from 'three';\nimport { Material } from './Material/material';\nimport { ManipulacaoVetMat } from './manipulacao-vet-mat';\n\n\n/**\n * Estrutura genérica para guardar qualquer coisa que possa ser atingida por um raio.\n */\nexport class HitRecord {\n  manipula = new ManipulacaoVetMat();\n  _t: number;\n  _p: Vector3;\n  _normal: Vector3;\n  _material: Material;\n\n  constructor() {\n    this._t = 0;\n    this._p = this.manipula.criarVector3(0, 0, 0);\n    this._normal = this.manipula.criarVector3(0, 0, 0);\n    this._material = new Material();\n  }\n\n  get t() {\n    return this._t;\n  }\n\n  get p() {\n    return this._p;\n  }\n\n  get normal() {\n    return this._normal;\n  }\n\n  get material() {\n    return this._material;\n  }\n\n  set t(t) {\n    this._t = t;\n  }\n\n  set p(p) {\n    this._p = p;\n  }\n\n  set normal(normal) {\n    this._normal = normal;\n  }\n\n  set material(material) {\n    this._material = material;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Hittable.html":{"url":"classes/Hittable.html","title":"class - Hittable","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Hittable\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/classes/hittable.ts\n        \n\n\n            \n                Description\n            \n            \n                Classe genérica para representar qualquer coisa que possa ser atingida por um raio.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                hit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        hit\n                        \n                    \n                \n            \n            \n                \nhit(ray: Ray, rayTmin: number, rayTmax: number, hitRecord: HitRecord)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/hittable.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ray\n                                            \n                                                        Ray\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                rayTmin\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                rayTmax\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                hitRecord\n                                            \n                                                            HitRecord\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Ray } from 'three';\nimport { HitRecord } from './hit-record';\n\n/**\n * Classe genérica para representar qualquer coisa que possa ser atingida por um raio.\n */\nexport class Hittable {\n  hit(ray: Ray, rayTmin: number, rayTmax: number, hitRecord: HitRecord): boolean {\n    return true;\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HittableList.html":{"url":"classes/HittableList.html","title":"class - HittableList","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HittableList\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/classes/hittable-list.ts\n        \n\n\n            \n                Description\n            \n            \n                Classe que armazena uma lista de Hittables.\n\n            \n\n            \n                Extends\n            \n            \n                            Hittable\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _list\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                hit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    size\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(listHitable: Hittable[])\n                    \n                \n                        \n                            \n                                Defined in src/app/classes/hittable-list.ts:9\n                            \n                        \n\n                \n                    \n                            Representa uma lista de Hittables.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        listHitable\n                                                  \n                                                        \n                                                                        Hittable[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _list\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Hittable[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/hittable-list.ts:9\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        hit\n                        \n                    \n                \n            \n            \n                \n                        \n                    hit(ray: Ray, rayTmin: number, rayTmax: number, hitRecord: HitRecord)\n                \n            \n\n\n                    \n                        \n                            Inherited from         Hittable\n\n                        \n                    \n                    \n                        \n                                Defined in         Hittable:30\n\n                        \n                    \n\n\n            \n                \n                        Calcula se o objeto será atingido pelo raio especificado\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                ray\n                                            \n                                                        Ray\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nraio de luz.\n\n\n                                            \n                                        \n                                        \n                                                rayTmin\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \ninício do intervalo de onde o raio pode atingir.\n\n\n                                            \n                                        \n                                        \n                                                rayTmax\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nfinal do intervalo de onde o raio pode atingir.\n\n\n                                            \n                                        \n                                        \n                                                hitRecord\n                                            \n                                                            HitRecord\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \narmazenamento dos locais atingidos.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n\n                \n                    \n                        getsize()\n                    \n                \n                            \n                                \n                                    Defined in src/app/classes/hittable-list.ts:19\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Hittable } from './hittable';\nimport { Ray } from 'three';\nimport { HitRecord } from './hit-record';\n\n/**\n * Classe que armazena uma lista de Hittables.\n */\nexport class HittableList extends Hittable {\n  _list: Hittable[];\n  /**\n   * Representa uma lista de Hittables.\n   * @constructor\n   */\n  constructor(listHitable: Hittable[]) {\n    super();\n    this._list = listHitable || [];\n  }\n\n  get size () {\n    return this._list.length;\n  }\n\n  /**\n   * Calcula se o objeto será atingido pelo raio especificado\n   * @param {Ray} ray - raio de luz.\n   * @param {number} rayTmin - início do intervalo de onde o raio pode atingir.\n   * @param {number} rayTmax - final do intervalo de onde o raio pode atingir.\n   * @param {HitRecord} hitRecord - armazenamento dos locais atingidos.\n   */\n  override hit(ray: Ray, rayTmin: number, rayTmax: number, hitRecord: HitRecord): boolean {\n    let hasHitSomething = false;\n    let closestHit = rayTmax;\n    for(let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Imagem.html":{"url":"classes/Imagem.html","title":"class - Imagem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Imagem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/classes/imagem.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _pixelMatriz\n                            \n                            \n                                    Private\n                                _resolucao\n                            \n                            \n                                    Private\n                                _resolucaox\n                            \n                            \n                                    Private\n                                _resolucaoy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                adicionarPixel\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    pixelMatriz\n                                \n                                \n                                    resolucao\n                                \n                                \n                                    resolucaox\n                                \n                                \n                                    resolucaoy\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(resolucaoX: number, resolucaoY: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/classes/imagem.ts:7\n                            \n                        \n\n                \n                    \n                            Representa uma imagem.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        resolucaoX\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        resolucaoY\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _pixelMatriz\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Vector3[][]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/imagem.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _resolucao\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/imagem.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _resolucaox\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/imagem.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _resolucaoy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/imagem.ts:7\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        adicionarPixel\n                        \n                    \n                \n            \n            \n                \nadicionarPixel(pixelRGB: Vector3)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/imagem.ts:49\n                        \n                    \n\n\n            \n                \n                        Função que adiciona o pixel a matriz da imagem\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                pixelRGB\n                                            \n                                                        Vector3\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nvector3 com uma cor que representa o pixel a ser adicionado na imagem.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        pixelMatriz\n                    \n                \n\n                \n                    \n                        getpixelMatriz()\n                    \n                \n                            \n                                \n                                    Defined in src/app/classes/imagem.ts:23\n                                \n                            \n                    \n                        \n                                Matriz de Vector3 para armazenamento dos pixels da imagem.\n\n\n                                \n                                    Returns :     [][]\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        resolucao\n                    \n                \n\n                \n                    \n                        getresolucao()\n                    \n                \n                            \n                                \n                                    Defined in src/app/classes/imagem.ts:27\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        resolucaox\n                    \n                \n\n                \n                    \n                        getresolucaox()\n                    \n                \n                            \n                                \n                                    Defined in src/app/classes/imagem.ts:34\n                                \n                            \n                    \n                        \n                                Tamanho da imagem no eixo X\n\n\n                                \n                                    Returns :         number\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        resolucaoy\n                    \n                \n\n                \n                    \n                        getresolucaoy()\n                    \n                \n                            \n                                \n                                    Defined in src/app/classes/imagem.ts:41\n                                \n                            \n                    \n                        \n                                Tamanho da imagem no eixo Y\n\n\n                                \n                                    Returns :         number\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Vector3 } from \"three\";\n\nexport class Imagem {\n  private _pixelMatriz: Vector3[][];\n  private _resolucao: number;\n  private _resolucaox: number;\n  private _resolucaoy: number;\n\n  /**\n   * Representa uma imagem.\n   * @constructor\n   */\n  constructor(resolucaoX: number, resolucaoY: number) {\n    this._resolucaox = resolucaoX;\n    this._resolucaoy = resolucaoY;\n    this._resolucao = 0;\n    this._pixelMatriz = [];\n  }\n\n  /**\n   * Matriz de Vector3 para armazenamento dos pixels da imagem.\n   */\n  get pixelMatriz(): Vector3[][] {\n    return this._pixelMatriz;\n  }\n\n  get resolucao(): number {\n    return this._resolucao;\n  }\n\n  /**\n   * Tamanho da imagem no eixo X\n   */\n  get resolucaox(): number {\n    return this._resolucaox;\n  }\n\n  /**\n   * Tamanho da imagem no eixo Y\n   */\n  get resolucaoy(): number {\n    return this._resolucaoy;\n  }\n\n  /**\n   * Função que adiciona o pixel a matriz da imagem\n   * @param {Vector3} pixelRGB - vector3 com uma cor que representa o pixel a ser adicionado na imagem.\n   */\n  adicionarPixel(pixelRGB: Vector3) {\n    let posX = this._resolucao % this._resolucaox;\n    let posY = Math.floor(this._resolucao / this._resolucaox);\n    if(posY \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LerObjComponent.html":{"url":"components/LerObjComponent.html","title":"component - LerObjComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LerObjComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/ler-obj/ler-obj.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ler-obj\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./ler-obj.component.html\n            \n\n\n\n            \n                styleUrl\n                ./ler-obj.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                camera\n                            \n                            \n                                controls\n                            \n                            \n                                light\n                            \n                            \n                                objLoader\n                            \n                            \n                                renderer\n                            \n                            \n                                scene\n                            \n                            \n                                textureLoader\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadObj\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                render\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                objUrl\n                            \n                            \n                                textureUrl\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        objUrl\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/ler-obj/ler-obj.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        textureUrl\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/ler-obj/ler-obj.component.ts:23\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        loadObj\n                        \n                    \n                \n            \n            \n                \nloadObj()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/ler-obj/ler-obj.component.ts:56\n                        \n                    \n\n\n            \n                \n                        Carrega o arquivo .obj e um arquivo de textura\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/ler-obj/ler-obj.component.ts:35\n                        \n                    \n\n\n            \n                \n                        Define valores padrão de posição de câmera, iluminação e controles da cena.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        render\n                        \n                    \n                \n            \n            \n                \nrender()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/ler-obj/ler-obj.component.ts:83\n                        \n                    \n\n\n            \n                \n                        Renderiza a cena com o objeto e a câmera\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        camera\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new PerspectiveCamera(75, window.innerWidth/window.innerHeight, 0.1, 1000)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/ler-obj/ler-obj.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        controls\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new  OrbitControls(this.camera, this.renderer.domElement)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/ler-obj/ler-obj.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        light\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new PointLight(0xffffff, 1000)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/ler-obj/ler-obj.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        objLoader\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new OBJLoader()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/ler-obj/ler-obj.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        renderer\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new WebGLRenderer()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/ler-obj/ler-obj.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        scene\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Scene()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/ler-obj/ler-obj.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        textureLoader\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new TextureLoader()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/ler-obj/ler-obj.component.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, Input} from '@angular/core';\nimport {\n  AmbientLight,\n  Mesh, MeshBasicMaterial,\n  PerspectiveCamera,\n  PointLight,\n  Scene,\n  TextureLoader,\n  WebGLRenderer\n} from 'three'\nimport { OnInit} from '@angular/core';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport { OBJLoader } from 'three/examples/jsm/loaders/OBJLoader';\n\n@Component({\n  selector: 'ler-obj',\n  templateUrl: './ler-obj.component.html',\n  styleUrl: './ler-obj.component.css'\n})\n\nexport class LerObjComponent implements OnInit {\n  @Input() objUrl = \"\";\n  @Input() textureUrl = \"\";\n  scene = new Scene();\n  light = new PointLight(0xffffff, 1000);\n  camera = new PerspectiveCamera(75, window.innerWidth/window.innerHeight, 0.1, 1000);\n  renderer = new WebGLRenderer();\n  textureLoader = new TextureLoader();\n  objLoader = new OBJLoader();\n  controls = new  OrbitControls(this.camera, this.renderer.domElement);\n\n  /**\n   * Define valores padrão de posição de câmera, iluminação e controles da cena.\n   */\n  ngOnInit(): void {\n    this.light.position.set(2.5, 7.5, 15);\n    this.scene.add(this.light);\n    this.camera.position.set(0, 25, 20);\n    this.renderer.setSize(window.innerWidth, window.innerHeight);\n    this.renderer.clearColor();\n    document.body.appendChild(this.renderer.domElement);\n\n    const ambientLight = new AmbientLight( 0xffffff, 0.4);\n    this.scene.add(ambientLight);\n\n    this.controls.minDistance = 10;\n    this.controls.maxDistance = 15;\n    this.controls.addEventListener('change', this.render.bind(this));\n    this.loadObj();\n    this.render();\n  }\n\n  /**\n   * Carrega o arquivo .obj e um arquivo de textura\n   */\n  loadObj(): void {\n    this.objLoader.load(this.objUrl,\n      (object): void => {\n        const material = new MeshBasicMaterial({map: this.textureLoader.load(this.textureUrl)});\n        (object.children[0] as Mesh).material = material;\n        object.traverse(function (child) {\n          if ((child as Mesh).isMesh) {\n            (child as Mesh).material = material\n          }\n        });\n        object.rotateX(-190);\n        object.scale.set(0.08, 0.08, 0.08);\n        object.position.set(0, 0, 0);\n        this.scene.add(object);\n        this.controls.update();\n      }, (xhr): void => {\n        console.log((xhr.loaded / xhr.total) * 100 + '% loaded');\n      },\n      (error): void => {\n        console.log(error);\n      }\n    )\n  }\n\n  /**\n   * Renderiza a cena com o objeto e a câmera\n   */\n  render(): void {\n    this.renderer.render(this.scene, this.camera);\n  }\n}\n\n    \n\n    \n        \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CanvasBoxComponent', 'selector': 'app-canvas-box'},{'name': 'LerObjComponent', 'selector': 'ler-obj'},{'name': 'SalvarComponent', 'selector': 'app-salvar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LerObjComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Material.html":{"url":"classes/Material.html","title":"class - Material","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Material\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/classes/Material/material.ts\n        \n\n\n            \n                Description\n            \n            \n                Classe genérica para representar o material do qual o objeto é feito.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                scatter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        scatter\n                        \n                    \n                \n            \n            \n                \nscatter(ray: Ray, hitRecord: HitRecord, attenuation: Vector3, scattered: Ray)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/Material/material.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ray\n                                            \n                                                        Ray\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                hitRecord\n                                            \n                                                            HitRecord\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                attenuation\n                                            \n                                                        Vector3\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                scattered\n                                            \n                                                        Ray\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Ray, Vector3 } from 'three';\nimport { HitRecord } from '../hit-record';\n\n\n/**\n * Classe genérica para representar o material do qual o objeto é feito.\n */\nexport class Material {\n  scatter(ray: Ray, hitRecord: HitRecord, attenuation: Vector3, scattered: Ray): boolean {\n    return true;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Matrix2.html":{"url":"classes/Matrix2.html","title":"class - Matrix2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Matrix2\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/classes/matrix2.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                matrix2\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                calcularDeterminante\n                            \n                            \n                                inverter\n                            \n                            \n                                multiplicarEscalar\n                            \n                            \n                                multiplicarMatrizes\n                            \n                            \n                                somarEscalar\n                            \n                            \n                                somarMatrizes\n                            \n                            \n                                subtrairMatrizes\n                            \n                            \n                                transpor\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(n11?: number, n12?: number, n21?: number, n22?: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/classes/matrix2.ts:2\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        n11\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        n12\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        n21\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        n22\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        matrix2\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Array>\n\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/matrix2.ts:2\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        calcularDeterminante\n                        \n                    \n                \n            \n            \n                \ncalcularDeterminante()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/matrix2.ts:51\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         number\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        inverter\n                        \n                    \n                \n            \n            \n                \ninverter(m1: Matrix2)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/matrix2.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                m1\n                                            \n                                                            Matrix2\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Matrix2\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        multiplicarEscalar\n                        \n                    \n                \n            \n            \n                \nmultiplicarEscalar(m1: Matrix2, escalar: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/matrix2.ts:74\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                m1\n                                            \n                                                            Matrix2\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                escalar\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Matrix2\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        multiplicarMatrizes\n                        \n                    \n                \n            \n            \n                \nmultiplicarMatrizes(m1: Matrix2, m2: Matrix2)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/matrix2.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                m1\n                                            \n                                                            Matrix2\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                m2\n                                            \n                                                            Matrix2\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Matrix2\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        somarEscalar\n                        \n                    \n                \n            \n            \n                \nsomarEscalar(m: Matrix2, escalar: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/matrix2.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                m\n                                            \n                                                            Matrix2\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                escalar\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Matrix2\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        somarMatrizes\n                        \n                    \n                \n            \n            \n                \nsomarMatrizes(m1: Matrix2, m2: Matrix2)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/matrix2.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                m1\n                                            \n                                                            Matrix2\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                m2\n                                            \n                                                            Matrix2\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Matrix2\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subtrairMatrizes\n                        \n                    \n                \n            \n            \n                \nsubtrairMatrizes(m1: Matrix2, m2: Matrix2)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/matrix2.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                m1\n                                            \n                                                            Matrix2\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                m2\n                                            \n                                                            Matrix2\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Matrix2\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        transpor\n                        \n                    \n                \n            \n            \n                \ntranspor(m1: Matrix2)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/matrix2.ts:65\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                m1\n                                            \n                                                            Matrix2\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Matrix2\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class Matrix2 {\n  matrix2: Array>;\n  constructor(n11?: number, n12?: number,\n              n21?: number, n22?: number) {\n    this.matrix2 = new Array>;\n    this.matrix2 = new Array>();\n    this.matrix2[0] = new Array();\n    this.matrix2[1] = new Array();\n    this.matrix2[0][0] = n11 ?? 1;\n    this.matrix2[0][1] = n12 ?? 0;\n    this.matrix2[1][0] = n21 ?? 0;\n    this.matrix2[1][1] = n22 ?? 1;\n  }\n\n  somarMatrizes(m1: Matrix2, m2: Matrix2): Matrix2 {\n    let m3 = new Matrix2();\n    m3.matrix2[0][0] = m1.matrix2[0][0] + m2.matrix2[0][0];\n    m3.matrix2[0][1] = m1.matrix2[0][1] + m2.matrix2[0][1];\n    m3.matrix2[1][0] = m1.matrix2[1][0] + m2.matrix2[1][0];\n    m3.matrix2[1][1] = m1.matrix2[1][1] + m2.matrix2[1][1];\n    return m3;\n  }\n\n  subtrairMatrizes(m1: Matrix2, m2: Matrix2): Matrix2 {\n    let m3 = new Matrix2();\n    m3.matrix2[0][0] = m1.matrix2[0][0] - m2.matrix2[0][0];\n    m3.matrix2[0][1] = m1.matrix2[0][1] - m2.matrix2[0][1];\n    m3.matrix2[1][0] = m1.matrix2[1][0] - m2.matrix2[1][0];\n    m3.matrix2[1][1] = m1.matrix2[1][1] - m2.matrix2[1][1];\n    return m3;\n  }\n\n  multiplicarMatrizes(m1: Matrix2, m2: Matrix2): Matrix2 {\n    let m3 = new Matrix2();\n    m3.matrix2[0][0] = m1.matrix2[0][0] * m2.matrix2[0][0];\n    m3.matrix2[0][1] = m1.matrix2[0][1] * m2.matrix2[0][1];\n    m3.matrix2[1][0] = m1.matrix2[1][0] * m2.matrix2[1][0];\n    m3.matrix2[1][1] = m1.matrix2[1][1] * m2.matrix2[1][1];\n    return m3;\n  }\n\n  somarEscalar(m: Matrix2, escalar: number): Matrix2 {\n    let m3 = new Matrix2();\n    m3.matrix2[0][0] = m.matrix2[0][0] + escalar;\n    m3.matrix2[0][1] = m.matrix2[0][1] + escalar;\n    m3.matrix2[1][0] = m.matrix2[1][0] + escalar;\n    m3.matrix2[1][1] = m.matrix2[1][1] + escalar;\n    return m3;\n  }\n\n  calcularDeterminante(): number {\n    return (this.matrix2[0][0] * this.matrix2[1][1]) - (this.matrix2[0][1] * this.matrix2[1][0]);\n  }\n\n  inverter(m1: Matrix2): Matrix2 {\n    let m = new Matrix2();\n    let det = m1.calcularDeterminante();\n    m.matrix2[0][0] = m1.matrix2[1][1]*(1/det);\n    m.matrix2[0][1] = -(m1.matrix2[0][1]*(1/det));\n    m.matrix2[1][0] = -(m1.matrix2[1][0]*(1/det));\n    m.matrix2[1][1] = m1.matrix2[0][0]*(1/det);\n    return m;\n  }\n\n  transpor(m1: Matrix2): Matrix2 {\n    let m = new Matrix2();\n    m.matrix2[0][0] = m1.matrix2[0][0];\n    m.matrix2[0][1] = m1.matrix2[1][0];\n    m.matrix2[1][0] = m1.matrix2[0][1];\n    m.matrix2[1][1] = m1.matrix2[1][1];\n    return m;\n  }\n\n  multiplicarEscalar(m1: Matrix2, escalar: number): Matrix2 {\n    let m = new Matrix2();\n    m.matrix2[0][0] = m1.matrix2[0][0] * escalar;\n    m.matrix2[0][1] = m1.matrix2[1][0] * escalar;\n    m.matrix2[1][0] = m1.matrix2[0][1] * escalar;\n    m.matrix2[1][1] = m1.matrix2[1][1] * escalar;\n    return m;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Metal.html":{"url":"classes/Metal.html","title":"class - Metal","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Metal\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/classes/Material/metal.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            Material\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _albedo\n                            \n                            \n                                _fuzz\n                            \n                            \n                                    Private\n                                manipula\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                randomInUnitSphere\n                            \n                            \n                                reflect\n                            \n                            \n                                    \n                                scatter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(albedo: Vector3, fuzz: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/classes/Material/metal.ts:9\n                            \n                        \n\n                \n                    \n                            Representa o material metal.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        albedo\n                                                  \n                                                        \n                                                                    Vector3\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nrazão entre luz refletida e incidente.\n\n\n                                                        \n                                                \n                                                \n                                                        fuzz\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nfator que randomiza a direção da reflexão.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _albedo\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Vector3\n\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/Material/metal.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _fuzz\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/Material/metal.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        manipula\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new ManipulacaoVetMat()\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/Material/metal.ts:9\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        randomInUnitSphere\n                        \n                    \n                \n            \n            \n                \nrandomInUnitSphere()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/Material/metal.ts:59\n                        \n                    \n\n\n            \n                \n                        Função que retorna um vetor aleatório dentro de uma esfera.\n\n\n                        \n                            Returns :     Vector3\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reflect\n                        \n                    \n                \n            \n            \n                \nreflect(vectorV: Vector3, vectorN: Vector3)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/Material/metal.ts:51\n                        \n                    \n\n\n            \n                \n                        Função que retorna o raio refletido.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                vectorV\n                                            \n                                                        Vector3\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nvetor incidente.\n\n\n                                            \n                                        \n                                        \n                                                vectorN\n                                            \n                                                        Vector3\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nnormal.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Vector3\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        scatter\n                        \n                    \n                \n            \n            \n                \n                        \n                    scatter(ray: Ray, hitRecord: HitRecord, attenuation: Vector3, scattered: Ray)\n                \n            \n\n\n                    \n                        \n                            Inherited from         Material\n\n                        \n                    \n                    \n                        \n                                Defined in         Material:35\n\n                        \n                    \n\n\n            \n                \n                        Função que cria a representação de um raio incidente absorvido, atenuado.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                ray\n                                            \n                                                        Ray\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nrazão entre luz refletida e incidente.\n\n\n                                            \n                                        \n                                        \n                                                hitRecord\n                                            \n                                                            HitRecord\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nfator que randomiza a direção da reflexão.\n\n\n                                            \n                                        \n                                        \n                                                attenuation\n                                            \n                                                        Vector3\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \natenuação do raio de luz.\n\n\n                                            \n                                        \n                                        \n                                                scattered\n                                            \n                                                        Ray\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nraio de luz dispersados.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Material } from './material';\nimport { Ray, Vector3 } from 'three';\nimport { ManipulacaoVetMat } from '../manipulacao-vet-mat';\nimport { HitRecord } from '../hit-record';\n\nexport class Metal extends Material {\n  _albedo: Vector3;\n  _fuzz: number;\n  private manipula = new ManipulacaoVetMat();\n\n  /**\n   * Representa o material metal.\n   * @constructor\n   * @param {Vector3} albedo - razão entre luz refletida e incidente.\n   * @param {number} fuzz - fator que randomiza a direção da reflexão.\n   */\n  constructor(albedo: Vector3, fuzz: number) {\n    super();\n    this._albedo = albedo;\n    if(fuzz) {\n      this._fuzz = fuzz  0;\n  }\n\n  /**\n   * Função que retorna o raio refletido.\n   *\n   * @param {Vector3} vectorV - vetor incidente.\n   * @param {Vector3} vectorN - normal.\n   */\n  reflect(vectorV: Vector3, vectorN: Vector3): Vector3 {\n    let produtoEscalarVN = this.manipula.calcularProdutoEscalarVec3(vectorV, vectorN);\n    return this.manipula.subtrairVetoresVec3(vectorV, this.manipula.multiplicarEscalarVec3(vectorN,2 * produtoEscalarVN));\n  }\n\n  /**\n   * Função que retorna um vetor aleatório dentro de uma esfera.\n   */\n  randomInUnitSphere(): Vector3 {\n    let vector;\n    do {\n      let vectorTemp = this.manipula.criarVector3(Math.random(), Math.random(), Math.random());\n      vector = this.manipula.subtrairVetoresVec3(this.manipula.multiplicarEscalarVec3(vectorTemp, 2), this.manipula.criarVector3(1, 1, 1));\n    } while ((vector.length() * vector.length()) >= 1);\n    return vector;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SalvarComponent.html":{"url":"components/SalvarComponent.html","title":"component - SalvarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SalvarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/salvar/salvar.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-salvar\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./salvar.component.html\n            \n\n\n\n            \n                styleUrl\n                ./salvar.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                gerarImagem\n                            \n                            \n                                salvarImagemCanvas\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                canvasId\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        canvasId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/salvar/salvar.component.ts:15\n                            \n                        \n                \n                    \n                        Id do canvas que será salvo como imagem\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        gerarImagem\n                        \n                    \n                \n            \n            \n                \ngerarImagem(imagem: Imagem)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/salvar/salvar.component.ts:35\n                        \n                    \n\n\n            \n                \n                        Função que gera uma imagem a partir da matriz de pixels e a exibe na canvas\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                imagem\n                                            \n                                                            Imagem\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    imagem que possui um matriz com as informações de cores de cada pixel\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        salvarImagemCanvas\n                        \n                    \n                \n            \n            \n                \nsalvarImagemCanvas()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/salvar/salvar.component.ts:20\n                        \n                    \n\n\n            \n                \n                        Função que uso o Id do canvas e salva a imagem mostrada em um arquivo png\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport {Imagem} from \"../../classes/imagem\";\nimport Jimp from 'jimp/browser/lib/jimp.js';\nimport {Vector3} from \"three\";\n\n@Component({\n  selector: 'app-salvar',\n  templateUrl: './salvar.component.html',\n  styleUrl: './salvar.component.css'\n})\nexport class SalvarComponent {\n  /**\n   * Id do canvas que será salvo como imagem\n   */\n  @Input() canvasId = \"\";\n\n  /**\n   * Função que uso o Id do canvas e salva a imagem mostrada em um arquivo png\n   */\n  salvarImagemCanvas() {\n    const canvas =  document.getElementById(this.canvasId) as HTMLCanvasElement;\n    if(canvas) {\n      const image = canvas.toDataURL(\"image/png\");\n      const a = document.createElement(\"a\");\n      a.href = image.replace(/^data:image\\/[^;]/, 'data:application/octet-stream');\n      a.download = this.canvasId + \".png\";\n      a.click();\n    }\n  }\n\n  /**\n   * Função que gera uma imagem a partir da matriz de pixels e a exibe na canvas\n   * @param {Imagem} imagem imagem que possui um matriz com as informações de cores de cada pixel\n   */\n  gerarImagem(imagem: Imagem) {\n    const canvas =  document.getElementById(\"canvas-esfera\") as HTMLCanvasElement;\n    let imagemJimp = new Jimp(imagem.resolucaox, imagem.resolucaoy, (erro: any, _imagem) => {\n      if (erro) {\n        throw erro;\n      }\n      imagem.pixelMatriz.forEach((pixelRow: Vector3[], y: number): void => {\n        pixelRow.forEach((pixel: Vector3, x: number): void => {\n          let color = Jimp.rgbaToInt((pixel.x * 255), (pixel.y * 255), (pixel.z * 255), 255, (a, v) => {})\n          _imagem.setPixelColor(color, x, y, () => {});\n        });\n      });\n      _imagem.getBase64Async(Jimp.MIME_PNG).then((base) => {\n        let img = new Image(imagemJimp.bitmap.width, imagemJimp.bitmap.height);\n        img.src = base;\n        img.onload = () => {\n          if (canvas && canvas.getContext(\"2d\")) {\n            canvas.getContext(\"2d\")!.drawImage(img, 0, 0)\n          }\n        }\n      });\n    });\n  }\n}\n\n    \n\n    \n        Salvar\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Salvar'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CanvasBoxComponent', 'selector': 'app-canvas-box'},{'name': 'LerObjComponent', 'selector': 'ler-obj'},{'name': 'SalvarComponent', 'selector': 'app-salvar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SalvarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Vidro.html":{"url":"classes/Vidro.html","title":"class - Vidro","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Vidro\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/classes/Material/vidro.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            Material\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _indiceRefrativo\n                            \n                            \n                                    Private\n                                manipula\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                reflect\n                            \n                            \n                                refract\n                            \n                            \n                                    \n                                scatter\n                            \n                            \n                                schlick\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(indiceRefrativo: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/classes/Material/vidro.ts:9\n                            \n                        \n\n                \n                    \n                            Representa o material vidro.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        indiceRefrativo\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \níndice refrativo do vidro.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _indiceRefrativo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/Material/vidro.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        manipula\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new ManipulacaoVetMat()\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/Material/vidro.ts:9\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        reflect\n                        \n                    \n                \n            \n            \n                \nreflect(vectorV: Vector3, vectorN: Vector3)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/Material/vidro.ts:68\n                        \n                    \n\n\n            \n                \n                        Função que retorna o raio refletido.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                vectorV\n                                            \n                                                        Vector3\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nvetor incidente.\n\n\n                                            \n                                        \n                                        \n                                                vectorN\n                                            \n                                                        Vector3\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nnormal.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refract\n                        \n                    \n                \n            \n            \n                \nrefract(vectorV: Vector3, vectorN: Vector3, frontFace: number, refracted: Vector3)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/Material/vidro.ts:81\n                        \n                    \n\n\n            \n                \n                        Função que retorna o raio refratado.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                vectorV\n                                            \n                                                        Vector3\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nvetor do raio incidente.\n\n\n                                            \n                                        \n                                        \n                                                vectorN\n                                            \n                                                        Vector3\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nnormal.\n\n\n                                            \n                                        \n                                        \n                                                frontFace\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                            \n                                        \n                                        \n                                                refracted\n                                            \n                                                        Vector3\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nvetor do raio refratado.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        scatter\n                        \n                    \n                \n            \n            \n                \n                        \n                    scatter(ray: Ray, hitRecord: HitRecord, attenuation: Vector3, scattered: Ray)\n                \n            \n\n\n                    \n                        \n                            Inherited from         Material\n\n                        \n                    \n                    \n                        \n                                Defined in         Material:29\n\n                        \n                    \n\n\n            \n                \n                        Função que cria a representação de um raio incidente absorvido, atenuado.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                ray\n                                            \n                                                        Ray\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nrazão entre luz refletida e incidente.\n\n\n                                            \n                                        \n                                        \n                                                hitRecord\n                                            \n                                                            HitRecord\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nfator que randomiza a direção da reflexão.\n\n\n                                            \n                                        \n                                        \n                                                attenuation\n                                            \n                                                        Vector3\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \natenuação do raio de luz.\n\n\n                                            \n                                        \n                                        \n                                                scattered\n                                            \n                                                        Ray\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nraio de luz dispersados.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        schlick\n                        \n                    \n                \n            \n            \n                \nschlick(cosseno: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/Material/vidro.ts:105\n                        \n                    \n\n\n            \n                \n                        Função que retorna a aproximação de Schlik para reflexão.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                cosseno\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \ncosseno do angulo entre a direção da luz incidente e a normal da interface\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Material } from './material';\nimport { Ray, Vector3 } from 'three';\nimport { ManipulacaoVetMat } from '../manipulacao-vet-mat';\nimport { HitRecord } from '../hit-record';\n\n\nexport class Vidro extends Material {\n  _indiceRefrativo: number;\n  private manipula = new ManipulacaoVetMat();\n\n  /**\n   * Representa o material vidro.\n   * @constructor\n   * @param {number} indiceRefrativo - índice refrativo do vidro.\n   */\n  constructor(indiceRefrativo: number) {\n    super();\n    this._indiceRefrativo = indiceRefrativo;\n  }\n\n  /**\n   * Função que cria a representação de um raio incidente absorvido, atenuado.\n   *\n   * @param {Ray} ray - razão entre luz refletida e incidente.\n   * @param {HitRecord} hitRecord - fator que randomiza a direção da reflexão.\n   * @param {Vector3} attenuation - atenuação do raio de luz.\n   * @param {Ray} scattered - raio de luz dispersados.\n   */\n  override scatter(ray: Ray, hitRecord: HitRecord, attenuation: Vector3, scattered: Ray) {\n    let hitRecordNormal, frontFace, refractionRatio, cosseno;\n    let reflected = this.reflect(ray.direction, hitRecord.normal);\n    attenuation.x = 1;\n    attenuation.y = 1;\n    attenuation.z = 1;\n    let refracted = this.manipula.criarVector3(0, 0, 0);\n    if (this.manipula.calcularProdutoEscalarVec3(ray.direction, hitRecord.normal) > 0) {\n      hitRecordNormal = this.manipula.multiplicarEscalarVec3(hitRecord.normal, -1);\n      frontFace = this._indiceRefrativo;\n      cosseno = this._indiceRefrativo * this.manipula.calcularProdutoEscalarVec3(ray.direction, hitRecord.normal) / ray.direction.length();\n    } else {\n      hitRecordNormal = hitRecord.normal;\n      frontFace = 1 / this._indiceRefrativo;\n      cosseno = -1 * this.manipula.calcularProdutoEscalarVec3(ray.direction, hitRecord.normal) / ray.direction.length();\n    }\n    if (this.refract(ray.direction, hitRecordNormal, frontFace, refracted)) {\n      refractionRatio = this.schlick(cosseno);\n    } else {\n      scattered.origin = hitRecord.p;\n      scattered.direction = reflected;\n      refractionRatio = 1;\n    }\n    if(Math.random()  0) {\n      let vectorTemp =\n        this.manipula.subtrairVetoresVec3(\n        this.manipula.multiplicarEscalarVec3(\n        this.manipula.subtrairVetoresVec3(vectorUV,\n        this.manipula.multiplicarEscalarVec3(vectorN, produtoEscalarVN)), frontFace), this.manipula.multiplicarEscalarVec3(vectorN, Math.sqrt(discriminante)));\n      refracted.x = vectorTemp.x;\n      refracted.y = vectorTemp.y;\n      refracted.z = vectorTemp.z;\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Função que retorna a aproximação de Schlik para reflexão.\n   *\n   * @param {number} cosseno - cosseno do angulo entre a direção da luz incidente e a normal da interface\n   */\n  schlick(cosseno: number) {\n    let iR0 = (1 - this._indiceRefrativo) / (1 + this._indiceRefrativo);\n    iR0 = iR0 * iR0;\n    return iR0 + (1 - iR0) * Math.pow((1 - cosseno), 5);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/classes/Material/material.ts\n            \n            class\n            Material\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/classes/Material/metal.ts\n            \n            class\n            Metal\n            \n                50 %\n                (4/8)\n            \n        \n        \n            \n                \n                src/app/classes/Material/vidro.ts\n            \n            class\n            Vidro\n            \n                62 %\n                (5/8)\n            \n        \n        \n            \n                \n                src/app/classes/esfera.ts\n            \n            class\n            Esfera\n            \n                25 %\n                (2/8)\n            \n        \n        \n            \n                \n                src/app/classes/hit-record.ts\n            \n            class\n            HitRecord\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/app/classes/hittable-list.ts\n            \n            class\n            HittableList\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/app/classes/hittable.ts\n            \n            class\n            Hittable\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/classes/imagem.ts\n            \n            class\n            Imagem\n            \n                28 %\n                (2/7)\n            \n        \n        \n            \n                \n                src/app/classes/manipulacao-vet-mat.ts\n            \n            class\n            ManipulacaoVetMat\n            \n                97 %\n                (42/43)\n            \n        \n        \n            \n                \n                src/app/classes/matrix2.ts\n            \n            class\n            Matrix2\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/components/canvas-box/canvas-box.component.ts\n            \n            component\n            CanvasBoxComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/components/ler-obj/ler-obj.component.ts\n            \n            component\n            LerObjComponent\n            \n                23 %\n                (3/13)\n            \n        \n        \n            \n                \n                src/app/components/salvar/salvar.component.ts\n            \n            component\n            SalvarComponent\n            \n                75 %\n                (3/4)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^17.1.3\n        \n            @angular/common : ^17.1.3\n        \n            @angular/compiler : ^17.1.3\n        \n            @angular/core : ^17.1.3\n        \n            @angular/forms : ^17.1.3\n        \n            @angular/platform-browser : ^17.1.3\n        \n            @angular/platform-browser-dynamic : ^17.1.3\n        \n            @angular/router : ^17.1.3\n        \n            @types/three : ^0.161.2\n        \n            jimp : ^0.14.0\n        \n            process : ^0.11.10\n        \n            rxjs : ~7.8.0\n        \n            three : ^0.161.0\n        \n            tslib : ^2.3.0\n        \n            util : ^0.10.3\n        \n            zone.js : ~0.14.3\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nAtividade 04\nEsse projeto foi gerado com Angular CLI versão 17.1.2.\nExecução\nUse o comando npm start para executar. Abra a url http://localhost:4200/.\nDocumentação\nUse o comando npm run serve-docs para visualizar a documentação na url http://127.0.0.1:8080.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCanvasBoxComponent\n\nCanvasBoxComponent\n\nAppModule -->\n\nCanvasBoxComponent->AppModule\n\n\n\n\n\nLerObjComponent\n\nLerObjComponent\n\nAppModule -->\n\nLerObjComponent->AppModule\n\n\n\n\n\nSalvarComponent\n\nSalvarComponent\n\nAppModule -->\n\nSalvarComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Components\n                \n            \n        \n        \n            \n                \n                    \n                    10 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
